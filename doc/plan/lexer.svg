<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 3.0.0 (0)
 -->
<!-- Title: Merged Pages: 1 -->
<svg width="266pt" height="501pt"
 viewBox="0.00 0.00 266.00 501.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 497)">
<title>Merged</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-497 262,-497 262,4 -4,4"/>
<!-- Lexer -->
<g id="node1" class="node">
<title>Lexer</title>
<g id="a_node1"><a xlink:href="$class_lexer.html" xlink:title="Lexikai értelmező">
<polygon fill="white" stroke="black" points="0,-0.5 0,-222.5 258,-222.5 258,-0.5 0,-0.5"/>
<text text-anchor="middle" x="129" y="-210.5" font-family="Helvetica,sans-Serif" font-size="10.00">Lexer</text>
<polyline fill="none" stroke="black" points="0,-203.5 258,-203.5 "/>
<text text-anchor="start" x="8" y="-191.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::istream &amp; is</text>
<text text-anchor="start" x="8" y="-180.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::vector&lt; Token &gt; tokens</text>
<text text-anchor="start" x="8" y="-169.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::vector&lt; Token &gt;::iterator currentToken</text>
<text text-anchor="start" x="8" y="-158.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::vector&lt; Token &gt;::iterator nextToken</text>
<polyline fill="none" stroke="black" points="0,-151.5 258,-151.5 "/>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Lexer(std::istream &amp;_is)</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Lexer(std::ifstream &amp;_is)</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ const std::vector&lt; Token &gt; &amp; getTokens() const</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void operator()()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Token &amp; next() const</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void except(Token t)</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void consume()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Token &amp; current() const</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool eof() const</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool isSingleCharToken(char c) const</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool isTwoCharToken(std::string</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">::iterator &amp;it) const</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void lexLine(std::string line)</text>
</a>
</g>
</g>
<!-- Token -->
<g id="node2" class="node">
<title>Token</title>
<g id="a_node2"><a xlink:title="Egy lexikai token.">
<polygon fill="white" stroke="black" points="11.5,-270.5 11.5,-492.5 246.5,-492.5 246.5,-270.5 11.5,-270.5"/>
<text text-anchor="middle" x="129" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">Token</text>
<polyline fill="none" stroke="black" points="11.5,-473.5 246.5,-473.5 "/>
<text text-anchor="start" x="19.5" y="-461.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::string content</text>
<polyline fill="none" stroke="black" points="11.5,-454.5 246.5,-454.5 "/>
<text text-anchor="start" x="19.5" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Token(std::string s)</text>
<text text-anchor="start" x="19.5" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Token(const char *s)</text>
<text text-anchor="start" x="19.5" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Token(char c)</text>
<text text-anchor="start" x="19.5" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ size_t length() const</text>
<text text-anchor="start" x="19.5" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ char &amp; operator[](int i)</text>
<text text-anchor="start" x="19.5" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ const char &amp; operator[](int i) const</text>
<text text-anchor="start" x="19.5" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool operator==(const Token &amp;t) const</text>
<text text-anchor="start" x="19.5" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool operator==(const std::string &amp;) const</text>
<text text-anchor="start" x="19.5" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool operator==(const char *s) const</text>
<text text-anchor="start" x="19.5" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool operator==(const char c) const</text>
<text text-anchor="start" x="19.5" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool operator!=(const Token &amp;t) const</text>
<text text-anchor="start" x="19.5" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool operator!=(const char *s) const</text>
<text text-anchor="start" x="19.5" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator std::string()</text>
<text text-anchor="start" x="19.5" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string &amp; getContent()</text>
<text text-anchor="start" x="19.5" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ const std::string &amp; getContent() const</text>
<text text-anchor="start" x="19.5" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool isEOF() const</text>
</a>
</g>
</g>
<!-- Token&#45;&gt;Lexer -->
<g id="edge1" class="edge">
<title>Token&#45;&gt;Lexer</title>
<path fill="none" stroke="#404040" d="M129,-270.33C129,-258.65 129,-246.73 129,-234.92"/>
<polygon fill="none" stroke="#404040" points="129,-234.67 125,-228.67 129,-222.67 133,-228.67 129,-234.67"/>
<text text-anchor="middle" x="149" y="-244" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;tokens</text>
</g>
</g>
</svg>
