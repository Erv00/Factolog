<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: Merged Pages: 1 -->
<svg width="5928pt" height="2874pt" viewBox="0.00 0.00 5928.09 2874.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2870)">
<title>Merged</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-2870 5924.086,-2870 5924.086,4 -4,4"/>
<!-- TreeNode -->
<g id="node1" class="node">
<title>TreeNode</title>
<g id="a_node1"><a xlink:href="$class_tree_node.html" xlink:title="AST alaposztály.">
<polygon fill="#ffffff" stroke="#000000" points="410.6435,-2673.5 410.6435,-2805.5 632.4955,-2805.5 632.4955,-2673.5 410.6435,-2673.5"/>
<text text-anchor="middle" x="521.5695" y="-2792.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">TreeNode</text>
<polyline fill="none" stroke="#000000" points="410.6435,-2785.5 632.4955,-2785.5 "/>
<text text-anchor="middle" x="521.5695" y="-2772.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="410.6435,-2765.5 632.4955,-2765.5 "/>
<text text-anchor="start" x="418.6435" y="-2752.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual std::ostream &amp; printDot</text>
<text text-anchor="start" x="418.6435" y="-2740.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">(std::ostream &amp;os) const =0</text>
<text text-anchor="start" x="418.6435" y="-2728.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual void checkSemantics(CompilationUnit</text>
<text text-anchor="start" x="418.6435" y="-2716.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;cu) const</text>
<text text-anchor="start" x="418.6435" y="-2704.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual ~TreeNode()</text>
<text text-anchor="start" x="418.6435" y="-2692.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual EID addToBlueprint(Blueprint</text>
<text text-anchor="start" x="418.6435" y="-2680.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;bp) const</text>
</a>
</g>
</g>
<!-- ParameterListDeclaration -->
<g id="node2" class="node">
<title>ParameterListDeclaration</title>
<g id="a_node2"><a xlink:href="$class_parameter_list_declaration.html" xlink:title="Modul paramétereinek deklarálása.">
<polygon fill="#ffffff" stroke="#000000" points="208.365,-531.5 208.365,-735.5 400.774,-735.5 400.774,-531.5 208.365,-531.5"/>
<text text-anchor="middle" x="304.5695" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">ParameterListDeclaration</text>
<polyline fill="none" stroke="#000000" points="208.365,-715.5 400.774,-715.5 "/>
<text text-anchor="start" x="216.365" y="-702.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::vector&lt; Parameter * &gt; parameters</text>
<polyline fill="none" stroke="#000000" points="208.365,-695.5 400.774,-695.5 "/>
<text text-anchor="start" x="216.365" y="-682.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~ParameterListDeclaration()</text>
<text text-anchor="start" x="216.365" y="-670.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::ostream &amp; printDot(std::ostream</text>
<text text-anchor="start" x="216.365" y="-658.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;os) const</text>
<text text-anchor="start" x="216.365" y="-646.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ size_t length() const</text>
<text text-anchor="start" x="216.365" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const Parameter * operator[](size</text>
<text text-anchor="start" x="216.365" y="-622.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">_t idx) const</text>
<text text-anchor="start" x="216.365" y="-610.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Parameter * operator[](size_t idx)</text>
<text text-anchor="start" x="216.365" y="-598.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void checkSemantics(CompilationUnit</text>
<text text-anchor="start" x="216.365" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;cu) const</text>
<text text-anchor="start" x="216.365" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void translate(const Translator</text>
<text text-anchor="start" x="216.365" y="-562.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;translation)</text>
<text text-anchor="start" x="216.365" y="-550.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static ParameterListDeclaration</text>
<text text-anchor="start" x="216.365" y="-538.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> * parse(Lexer &amp;lex)</text>
</a>
</g>
</g>
<!-- TreeNode&#45;&gt;ParameterListDeclaration -->
<g id="edge1" class="edge">
<title>TreeNode-&gt;ParameterListDeclaration</title>
<path fill="none" stroke="#191970" d="M400.3669,-2723.0502C302.7286,-2703.0656 170.1702,-2659.4051 97.5695,-2565 26.9285,-2473.1433 63.5695,-2422.3784 63.5695,-2306.5 63.5695,-2306.5 63.5695,-2306.5 63.5695,-898.5 63.5695,-841.6541 82.7185,-826.4118 120.5695,-784 146.6722,-754.7521 163.667,-760.1211 194.5695,-736 199.0964,-732.4665 203.6576,-728.7833 208.2138,-725.0023"/>
<polygon fill="none" stroke="#191970" points="399.8084,-2726.5076 410.2991,-2725.0265 401.1745,-2719.6422 399.8084,-2726.5076"/>
</g>
<!-- AsyncExpression -->
<g id="node3" class="node">
<title>AsyncExpression</title>
<g id="a_node3"><a xlink:href="$class_async_expression.html" xlink:title="Aszinkron kifejezés.">
<polygon fill="#ffffff" stroke="#000000" points="350.691,-1145.5 350.691,-1277.5 566.448,-1277.5 566.448,-1145.5 350.691,-1145.5"/>
<text text-anchor="middle" x="458.5695" y="-1264.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">AsyncExpression</text>
<polyline fill="none" stroke="#000000" points="350.691,-1257.5 566.448,-1257.5 "/>
<text text-anchor="middle" x="458.5695" y="-1244.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="350.691,-1237.5 566.448,-1237.5 "/>
<text text-anchor="start" x="358.691" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual ~AsyncExpression()</text>
<text text-anchor="start" x="358.691" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual void optimize()</text>
<text text-anchor="start" x="358.691" y="-1200.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual AsyncExpression * clone</text>
<text text-anchor="start" x="358.691" y="-1188.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">() const =0</text>
<text text-anchor="start" x="358.691" y="-1176.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual void translate(const Translator</text>
<text text-anchor="start" x="358.691" y="-1164.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;translation)=0</text>
<text text-anchor="start" x="358.691" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static AsyncExpression * parse(Lexer &amp;lex)</text>
</a>
</g>
</g>
<!-- TreeNode&#45;&gt;AsyncExpression -->
<g id="edge2" class="edge">
<title>TreeNode-&gt;AsyncExpression</title>
<path fill="none" stroke="#191970" d="M516.1828,-2662.7687C507.2391,-2532.6702 489.3444,-2260.4601 479.5695,-2030 467.7103,-1750.3986 461.6716,-1416.7651 459.5148,-1277.5694"/>
<polygon fill="none" stroke="#191970" points="512.7101,-2663.2864 516.8894,-2673.0221 519.6936,-2662.8051 512.7101,-2663.2864"/>
</g>
<!-- Module -->
<g id="node7" class="node">
<title>Module</title>
<g id="a_node7"><a xlink:href="$class_module.html" xlink:title="Modul leírása.">
<polygon fill="#ffffff" stroke="#000000" points="999.4885,-302.5 999.4885,-482.5 1201.6505,-482.5 1201.6505,-302.5 999.4885,-302.5"/>
<text text-anchor="middle" x="1100.5695" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Module</text>
<polyline fill="none" stroke="#000000" points="999.4885,-462.5 1201.6505,-462.5 "/>
<text text-anchor="start" x="1007.4885" y="-449.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># Identifier * identifier</text>
<text text-anchor="start" x="1007.4885" y="-437.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># ParameterListDeclaration * parameters</text>
<polyline fill="none" stroke="#000000" points="999.4885,-430.5 1201.6505,-430.5 "/>
<text text-anchor="start" x="1007.4885" y="-417.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual ~Module()</text>
<text text-anchor="start" x="1007.4885" y="-405.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const Identifier * getIdentifier() const</text>
<text text-anchor="start" x="1007.4885" y="-393.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const ParameterListDeclaration *</text>
<text text-anchor="start" x="1007.4885" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> getParameters() const</text>
<text text-anchor="start" x="1007.4885" y="-369.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual void optimize()=0</text>
<text text-anchor="start" x="1007.4885" y="-357.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual void calcualteColorTree</text>
<text text-anchor="start" x="1007.4885" y="-345.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">(LinkingUnit *lu, unsigned int expectedOut</text>
<text text-anchor="start" x="1007.4885" y="-333.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">[], unsigned int inputs[])=0</text>
<text text-anchor="start" x="1007.4885" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual std::vector&lt; Identifier</text>
<text text-anchor="start" x="1007.4885" y="-309.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &gt; recalculateDefinedVariables()=0</text>
</a>
</g>
</g>
<!-- TreeNode&#45;&gt;Module -->
<g id="edge6" class="edge">
<title>TreeNode-&gt;Module</title>
<path fill="none" stroke="#191970" d="M642.9533,-2727.4271C977.9126,-2690.7798 1890.5695,-2567.0236 1890.5695,-2306.5 1890.5695,-2306.5 1890.5695,-2306.5 1890.5695,-633.5 1890.5695,-491.093 1414.9989,-424.5881 1201.8281,-401.9309"/>
<polygon fill="none" stroke="#191970" points="642.2936,-2723.9781 632.7303,-2728.5381 643.05,-2730.9371 642.2936,-2723.9781"/>
</g>
<!-- Parameter -->
<g id="node9" class="node">
<title>Parameter</title>
<g id="a_node9"><a xlink:href="$class_parameter.html" xlink:title="Modul paraméter.">
<polygon fill="#ffffff" stroke="#000000" points="129.696,-808.5 129.696,-988.5 315.443,-988.5 315.443,-808.5 129.696,-808.5"/>
<text text-anchor="middle" x="222.5695" y="-975.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Parameter</text>
<polyline fill="none" stroke="#000000" points="129.696,-968.5 315.443,-968.5 "/>
<text text-anchor="start" x="137.696" y="-955.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- enum Direction direction</text>
<text text-anchor="start" x="137.696" y="-943.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- Identifier * identifier</text>
<polyline fill="none" stroke="#000000" points="129.696,-936.5 315.443,-936.5 "/>
<text text-anchor="start" x="137.696" y="-923.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~Parameter()</text>
<text text-anchor="start" x="137.696" y="-911.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Parameter()</text>
<text text-anchor="start" x="137.696" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Parameter(const Parameter &amp;p)</text>
<text text-anchor="start" x="137.696" y="-887.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::ostream &amp; printDot(std::ostream</text>
<text text-anchor="start" x="137.696" y="-875.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;os) const</text>
<text text-anchor="start" x="137.696" y="-863.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ enum Direction getDirection() const</text>
<text text-anchor="start" x="137.696" y="-851.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const Identifier * getIdentifier() const</text>
<text text-anchor="start" x="137.696" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void translate(const Translator</text>
<text text-anchor="start" x="137.696" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;translation)</text>
<text text-anchor="start" x="137.696" y="-815.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static Parameter * parse(Lexer &amp;lex)</text>
</a>
</g>
</g>
<!-- TreeNode&#45;&gt;Parameter -->
<g id="edge8" class="edge">
<title>TreeNode-&gt;Parameter</title>
<path fill="none" stroke="#191970" d="M401.5504,-2680.5929C277.4223,-2610.2498 101.5695,-2479.981 101.5695,-2306.5 101.5695,-2306.5 101.5695,-2306.5 101.5695,-1211.5 101.5695,-1132.5585 135.4683,-1049.4954 167.3808,-988.7897"/>
<polygon fill="none" stroke="#191970" points="399.9611,-2683.7144 410.3951,-2685.5538 403.3855,-2677.6092 399.9611,-2683.7144"/>
</g>
<!-- ParameterList -->
<g id="node10" class="node">
<title>ParameterList</title>
<g id="a_node10"><a xlink:href="$class_parameter_list.html" xlink:title="Paraméterlista.">
<polygon fill="#ffffff" stroke="#000000" points="488.9175,-1813.5 488.9175,-2029.5 690.2215,-2029.5 690.2215,-1813.5 488.9175,-1813.5"/>
<text text-anchor="middle" x="589.5695" y="-2016.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">ParameterList</text>
<polyline fill="none" stroke="#000000" points="488.9175,-2009.5 690.2215,-2009.5 "/>
<text text-anchor="start" x="496.9175" y="-1996.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::vector&lt; ValueExpression * &gt;</text>
<text text-anchor="start" x="496.9175" y="-1984.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> parameters</text>
<polyline fill="none" stroke="#000000" points="488.9175,-1977.5 690.2215,-1977.5 "/>
<text text-anchor="start" x="496.9175" y="-1964.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~ParameterList()</text>
<text text-anchor="start" x="496.9175" y="-1952.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ParameterList()</text>
<text text-anchor="start" x="496.9175" y="-1940.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ParameterList(const ParameterList &amp;pl)</text>
<text text-anchor="start" x="496.9175" y="-1928.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::ostream &amp; printDot(std::ostream</text>
<text text-anchor="start" x="496.9175" y="-1916.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;os) const</text>
<text text-anchor="start" x="496.9175" y="-1904.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ size_t length() const</text>
<text text-anchor="start" x="496.9175" y="-1892.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const ValueExpression * operator</text>
<text text-anchor="start" x="496.9175" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">[](size_t idx) const</text>
<text text-anchor="start" x="496.9175" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void checkSemantics(CompilationUnit</text>
<text text-anchor="start" x="496.9175" y="-1856.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;cu) const</text>
<text text-anchor="start" x="496.9175" y="-1844.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void translate(const Translator</text>
<text text-anchor="start" x="496.9175" y="-1832.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;translation)</text>
<text text-anchor="start" x="496.9175" y="-1820.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static ParameterList * parse(Lexer &amp;lex)</text>
</a>
</g>
</g>
<!-- TreeNode&#45;&gt;ParameterList -->
<g id="edge9" class="edge">
<title>TreeNode-&gt;ParameterList</title>
<path fill="none" stroke="#191970" d="M527.9259,-2663.0361C540.0722,-2516.9232 566.6108,-2197.6801 580.5726,-2029.7275"/>
<polygon fill="none" stroke="#191970" points="524.4172,-2662.9969 527.0766,-2673.2525 531.3931,-2663.5769 524.4172,-2662.9969"/>
</g>
<!-- ValueExpression -->
<g id="node11" class="node">
<title>ValueExpression</title>
<g id="a_node11"><a xlink:href="$class_value_expression.html" xlink:title="Base class az értéket hordozó osztályoknak.">
<polygon fill="#ffffff" stroke="#000000" points="919.095,-2156.5 919.095,-2456.5 1144.044,-2456.5 1144.044,-2156.5 919.095,-2156.5"/>
<text text-anchor="middle" x="1031.5695" y="-2443.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">ValueExpression</text>
<polyline fill="none" stroke="#000000" points="919.095,-2436.5 1144.044,-2436.5 "/>
<text text-anchor="start" x="927.095" y="-2423.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># unsigned int outColor</text>
<text text-anchor="start" x="927.095" y="-2411.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># unsigned int inColors</text>
<polyline fill="none" stroke="#000000" points="919.095,-2404.5 1144.044,-2404.5 "/>
<text text-anchor="start" x="927.095" y="-2391.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ValueExpression()</text>
<text text-anchor="start" x="927.095" y="-2379.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual ~ValueExpression()</text>
<text text-anchor="start" x="927.095" y="-2367.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual ValueExpression * clone</text>
<text text-anchor="start" x="927.095" y="-2355.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">() const =0</text>
<text text-anchor="start" x="927.095" y="-2343.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual void optimize()=0</text>
<text text-anchor="start" x="927.095" y="-2331.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual bool isConst() const =0</text>
<text text-anchor="start" x="927.095" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual int calculate() const =0</text>
<text text-anchor="start" x="927.095" y="-2307.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual unsigned int getOutColor</text>
<text text-anchor="start" x="927.095" y="-2295.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">(LinkingUnit *lu) const</text>
<text text-anchor="start" x="927.095" y="-2283.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual bool hasOutColor(LinkingUnit</text>
<text text-anchor="start" x="927.095" y="-2271.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> *lu) const</text>
<text text-anchor="start" x="927.095" y="-2259.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void setOutColor(unsigned int col)</text>
<text text-anchor="start" x="927.095" y="-2247.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ unsigned int getInColor(size_t index=0) const</text>
<text text-anchor="start" x="927.095" y="-2235.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool hasInColor(size_t index=0) const</text>
<text text-anchor="start" x="927.095" y="-2223.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void setInColor(unsigned int col,</text>
<text text-anchor="start" x="927.095" y="-2211.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> size_t index=0)</text>
<text text-anchor="start" x="927.095" y="-2199.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual void calculateColorTree</text>
<text text-anchor="start" x="927.095" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">(LinkingUnit *lu, unsigned int expectedOut)=0</text>
<text text-anchor="start" x="927.095" y="-2175.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual void translate(const Translator</text>
<text text-anchor="start" x="927.095" y="-2163.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;translation)=0</text>
</a>
</g>
</g>
<!-- TreeNode&#45;&gt;ValueExpression -->
<g id="edge10" class="edge">
<title>TreeNode-&gt;ValueExpression</title>
<path fill="none" stroke="#191970" d="M607.2067,-2666.7923C692.8392,-2594.0887 824.9827,-2481.8963 919.0418,-2402.0382"/>
<polygon fill="none" stroke="#191970" points="604.9405,-2664.125 599.5827,-2673.2653 609.4711,-2669.4612 604.9405,-2664.125"/>
</g>
<!-- ParameterListDeclaration&#45;&gt;Module -->
<g id="edge37" class="edge">
<title>ParameterListDeclaration-&gt;Module</title>
<path fill="none" stroke="#404040" d="M400.982,-604.3098C548.776,-559.5631 830.6773,-474.2136 987.7549,-426.6562"/>
<polygon fill="none" stroke="#404040" points="987.8238,-426.6354 992.4073,-421.0683 999.309,-423.158 994.7255,-428.7251 987.8238,-426.6354"/>
<text text-anchor="middle" x="756.019" y="-504" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> #parameters</text>
</g>
<!-- Assignment -->
<g id="node4" class="node">
<title>Assignment</title>
<g id="a_node4"><a xlink:href="$class_assignment.html" xlink:title="Értékadás.">
<polygon fill="#ffffff" stroke="#000000" points="866.964,-796.5 866.964,-1000.5 1072.175,-1000.5 1072.175,-796.5 866.964,-796.5"/>
<text text-anchor="middle" x="969.5695" y="-987.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Assignment</text>
<polyline fill="none" stroke="#000000" points="866.964,-980.5 1072.175,-980.5 "/>
<text text-anchor="start" x="874.964" y="-967.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- Identifier * to</text>
<text text-anchor="start" x="874.964" y="-955.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- ValueExpression * val</text>
<polyline fill="none" stroke="#000000" points="866.964,-948.5 1072.175,-948.5 "/>
<text text-anchor="start" x="874.964" y="-935.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~Assignment()</text>
<text text-anchor="start" x="874.964" y="-923.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::ostream &amp; printDot(std::ostream</text>
<text text-anchor="start" x="874.964" y="-911.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;os) const</text>
<text text-anchor="start" x="874.964" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void checkSemantics(CompilationUnit</text>
<text text-anchor="start" x="874.964" y="-887.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;cu) const</text>
<text text-anchor="start" x="874.964" y="-875.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void optimize()</text>
<text text-anchor="start" x="874.964" y="-863.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void calculateColorTree(LinkingUnit *lu)</text>
<text text-anchor="start" x="874.964" y="-851.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ AsyncExpression * clone() const</text>
<text text-anchor="start" x="874.964" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void translate(const Translator</text>
<text text-anchor="start" x="874.964" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;translation)</text>
<text text-anchor="start" x="874.964" y="-815.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ EID addToBlueprint(Blueprint &amp;bp) const</text>
<text text-anchor="start" x="874.964" y="-803.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static Assignment * parse(Lexer &amp;lex)</text>
</a>
</g>
</g>
<!-- AsyncExpression&#45;&gt;Assignment -->
<g id="edge3" class="edge">
<title>AsyncExpression-&gt;Assignment</title>
<path fill="none" stroke="#191970" d="M553.8196,-1139.144C613.7681,-1095.0037 686.258,-1044.5362 721.5695,-1031 778.9128,-1009.0182 803.6994,-1040.5813 858.5695,-1013 865.6195,-1009.4562 872.4755,-1005.2824 879.0933,-1000.6627"/>
<polygon fill="none" stroke="#191970" points="551.4139,-1136.5697 545.449,-1145.3259 555.5724,-1142.2006 551.4139,-1136.5697"/>
</g>
<!-- ModuleConnection -->
<g id="node5" class="node">
<title>ModuleConnection</title>
<g id="a_node5"><a xlink:href="$class_module_connection.html" xlink:title="Modul csatlakoztatás.">
<polygon fill="#ffffff" stroke="#000000" points="601.85,-784.5 601.85,-1012.5 849.289,-1012.5 849.289,-784.5 601.85,-784.5"/>
<text text-anchor="middle" x="725.5695" y="-999.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">ModuleConnection</text>
<polyline fill="none" stroke="#000000" points="601.85,-992.5 849.289,-992.5 "/>
<text text-anchor="start" x="609.85" y="-979.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- Identifier * identifier</text>
<text text-anchor="start" x="609.85" y="-967.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- ParameterList * parameters</text>
<polyline fill="none" stroke="#000000" points="601.85,-960.5 849.289,-960.5 "/>
<text text-anchor="start" x="609.85" y="-947.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ModuleConnection(const ModuleConnection &amp;mc)</text>
<text text-anchor="start" x="609.85" y="-935.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ AsyncExpression * clone() const</text>
<text text-anchor="start" x="609.85" y="-923.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~ModuleConnection()</text>
<text text-anchor="start" x="609.85" y="-911.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::ostream &amp; printDot(std::ostream</text>
<text text-anchor="start" x="609.85" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;os) const</text>
<text text-anchor="start" x="609.85" y="-887.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void checkSemantics(CompilationUnit</text>
<text text-anchor="start" x="609.85" y="-875.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;cu) const</text>
<text text-anchor="start" x="609.85" y="-863.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const Identifier * getIdentifier() const</text>
<text text-anchor="start" x="609.85" y="-851.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ParameterList * getParameters()</text>
<text text-anchor="start" x="609.85" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void translate(const Translator</text>
<text text-anchor="start" x="609.85" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;translation)</text>
<text text-anchor="start" x="609.85" y="-815.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static ModuleConnection * parse</text>
<text text-anchor="start" x="609.85" y="-803.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">(Lexer &amp;lex)</text>
<text text-anchor="start" x="609.85" y="-791.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- ModuleConnection()</text>
</a>
</g>
</g>
<!-- AsyncExpression&#45;&gt;ModuleConnection -->
<g id="edge4" class="edge">
<title>AsyncExpression-&gt;ModuleConnection</title>
<path fill="none" stroke="#191970" d="M503.62,-1136.471C525.1918,-1102.8765 552.4277,-1063.5831 580.5695,-1031 587.2565,-1023.2577 594.3674,-1015.5104 601.7112,-1007.8656"/>
<polygon fill="none" stroke="#191970" points="500.3964,-1135.0171 497.976,-1145.3318 506.3004,-1138.7778 500.3964,-1135.0171"/>
</g>
<!-- VariableDeclaration -->
<g id="node6" class="node">
<title>VariableDeclaration</title>
<g id="a_node6"><a xlink:href="$class_variable_declaration.html" xlink:title="Változó(k) deklarálása.">
<polygon fill="#ffffff" stroke="#000000" points="333.613,-796.5 333.613,-1000.5 583.526,-1000.5 583.526,-796.5 333.613,-796.5"/>
<text text-anchor="middle" x="458.5695" y="-987.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">VariableDeclaration</text>
<polyline fill="none" stroke="#000000" points="333.613,-980.5 583.526,-980.5 "/>
<text text-anchor="start" x="341.613" y="-967.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::vector&lt; Identifier * &gt; varsDeclared</text>
<polyline fill="none" stroke="#000000" points="333.613,-960.5 583.526,-960.5 "/>
<text text-anchor="start" x="341.613" y="-947.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ AsyncExpression * clone() const</text>
<text text-anchor="start" x="341.613" y="-935.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~VariableDeclaration()</text>
<text text-anchor="start" x="341.613" y="-923.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::vector&lt; Identifier * &gt; &amp; getDeclaredVariables()</text>
<text text-anchor="start" x="341.613" y="-911.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::ostream &amp; printDot(std::ostream</text>
<text text-anchor="start" x="341.613" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;os) const</text>
<text text-anchor="start" x="341.613" y="-887.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void checkSemantics(CompilationUnit</text>
<text text-anchor="start" x="341.613" y="-875.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;cu) const</text>
<text text-anchor="start" x="341.613" y="-863.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void translate(const Translator</text>
<text text-anchor="start" x="341.613" y="-851.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;translation)</text>
<text text-anchor="start" x="341.613" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static VariableDeclaration * parse</text>
<text text-anchor="start" x="341.613" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">(Lexer &amp;lex)</text>
<text text-anchor="start" x="341.613" y="-815.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- VariableDeclaration()</text>
<text text-anchor="start" x="341.613" y="-803.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- VariableDeclaration(const VariableDeclaration &amp;vd)</text>
</a>
</g>
</g>
<!-- AsyncExpression&#45;&gt;VariableDeclaration -->
<g id="edge5" class="edge">
<title>AsyncExpression-&gt;VariableDeclaration</title>
<path fill="none" stroke="#191970" d="M458.5695,-1135.0485C458.5695,-1094.5633 458.5695,-1044.298 458.5695,-1000.5278"/>
<polygon fill="none" stroke="#191970" points="455.0696,-1135.1207 458.5695,-1145.1208 462.0696,-1135.1208 455.0696,-1135.1207"/>
</g>
<!-- AsyncModule -->
<g id="node8" class="node">
<title>AsyncModule</title>
<g id="a_node8"><a xlink:href="$class_async_module.html" xlink:title="Aszinkron modul.">
<polygon fill="#ffffff" stroke="#000000" points="0,-.5 0,-264.5 227.139,-264.5 227.139,-.5 0,-.5"/>
<text text-anchor="middle" x="113.5695" y="-251.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">AsyncModule</text>
<polyline fill="none" stroke="#000000" points="0,-244.5 227.139,-244.5 "/>
<text text-anchor="start" x="8" y="-231.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::vector&lt; AsyncExpression * &gt;</text>
<text text-anchor="start" x="8" y="-219.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> expressions</text>
<polyline fill="none" stroke="#000000" points="0,-212.5 227.139,-212.5 "/>
<text text-anchor="start" x="8" y="-199.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~AsyncModule()</text>
<text text-anchor="start" x="8" y="-187.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::ostream &amp; printDot(std::ostream</text>
<text text-anchor="start" x="8" y="-175.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;os) const</text>
<text text-anchor="start" x="8" y="-163.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void checkSemantics(CompilationUnit</text>
<text text-anchor="start" x="8" y="-151.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;cu) const</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void optimize()</text>
<text text-anchor="start" x="8" y="-127.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void calcualteColorTree(LinkingUnit</text>
<text text-anchor="start" x="8" y="-115.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> *lu, unsigned int expectedOut[], unsigned</text>
<text text-anchor="start" x="8" y="-103.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> int inputs[])</text>
<text text-anchor="start" x="8" y="-91.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::vector&lt; AsyncExpression * &gt;</text>
<text text-anchor="start" x="8" y="-79.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> linkModule(const Translator &amp;translation) const</text>
<text text-anchor="start" x="8" y="-67.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ AsyncModule * link(std::map&lt; const</text>
<text text-anchor="start" x="8" y="-55.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> Identifier, Module * &gt; &amp;modules)</text>
<text text-anchor="start" x="8" y="-43.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ EID addToBlueprint(Blueprint &amp;bp) const</text>
<text text-anchor="start" x="8" y="-31.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::vector&lt; Identifier &gt; recalculateDefined</text>
<text text-anchor="start" x="8" y="-19.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Variables()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static AsyncModule * parse(Lexer &amp;lex)</text>
</a>
</g>
</g>
<!-- AsyncExpression&#45;&gt;AsyncModule -->
<g id="edge48" class="edge">
<title>AsyncExpression-&gt;AsyncModule</title>
<path fill="none" stroke="#404040" d="M350.4501,-1178.3599C272.5215,-1148.392 172.3143,-1096.0184 120.5695,-1013 60.9238,-917.3055 101.5695,-872.7611 101.5695,-760 101.5695,-760 101.5695,-760 101.5695,-392.5 101.5695,-354.9878 102.8314,-314.4635 104.5368,-276.8255"/>
<polygon fill="none" stroke="#404040" points="104.5425,-276.701 100.8281,-270.5201 105.105,-264.7142 108.8194,-270.8951 104.5425,-276.701"/>
<text text-anchor="middle" x="146.0205" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> -recalculateDefined</text>
</g>
<!-- Module&#45;&gt;AsyncModule -->
<g id="edge7" class="edge">
<title>Module-&gt;AsyncModule</title>
<path fill="none" stroke="#191970" d="M989.4405,-363.2259C800.4456,-313.44 418.3963,-212.7988 227.5074,-162.514"/>
<polygon fill="none" stroke="#191970" points="988.5598,-366.6132 999.1215,-365.7761 990.343,-359.8442 988.5598,-366.6132"/>
</g>
<!-- Parameter&#45;&gt;ParameterListDeclaration -->
<g id="edge45" class="edge">
<title>Parameter-&gt;ParameterListDeclaration</title>
<path fill="none" stroke="#404040" d="M250.4454,-808.4133C256.5284,-788.7549 263.0422,-767.7039 269.3682,-747.2604"/>
<polygon fill="none" stroke="#404040" points="269.415,-747.1087 267.3675,-740.1944 272.9624,-735.645 275.01,-742.5593 269.415,-747.1087"/>
<text text-anchor="middle" x="294.904" y="-757" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> -parameters</text>
</g>
<!-- ParameterList&#45;&gt;ModuleConnection -->
<g id="edge41" class="edge">
<title>ParameterList-&gt;ModuleConnection</title>
<path fill="none" stroke="#404040" d="M584.3934,-1813.2493C575.9917,-1608.2109 565.1802,-1171.1803 617.5695,-1031 618.4623,-1028.611 619.4169,-1026.2331 620.4281,-1023.8682"/>
<polygon fill="none" stroke="#404040" points="620.4722,-1023.7739 619.3896,-1016.6445 625.5543,-1012.9031 626.6368,-1020.0326 620.4722,-1023.7739"/>
<text text-anchor="middle" x="606.904" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> -parameters</text>
</g>
<!-- ValueExpression&#45;&gt;Assignment -->
<g id="edge33" class="edge">
<title>ValueExpression-&gt;Assignment</title>
<path fill="none" stroke="#404040" d="M933.283,-2156.455C874.4174,-2058.0139 804.6022,-1924.0543 770.5695,-1795 687.3579,-1479.4559 626.6878,-1362.491 751.5695,-1061 758.7854,-1043.5792 765.0901,-1040.1643 781.5695,-1031 812.2844,-1013.9192 827.988,-1030.3186 858.5695,-1013 861.6185,-1011.2733 864.6374,-1009.4375 867.6216,-1007.5075"/>
<polygon fill="none" stroke="#404040" points="867.7502,-1007.4189 870.4177,-1000.7193 877.6279,-1000.6049 874.9604,-1007.3045 867.7502,-1007.4189"/>
<text text-anchor="middle" x="691.0125" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> -val</text>
</g>
<!-- BinaryExpression -->
<g id="node12" class="node">
<title>BinaryExpression</title>
<g id="a_node12"><a xlink:href="$class_binary_expression.html" xlink:title="2 operandusú műveletek base class-a">
<polygon fill="#ffffff" stroke="#000000" points="1205.302,-1494.5 1205.302,-1710.5 1433.837,-1710.5 1433.837,-1494.5 1205.302,-1494.5"/>
<text text-anchor="middle" x="1319.5695" y="-1697.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">BinaryExpression</text>
<polyline fill="none" stroke="#000000" points="1205.302,-1690.5 1433.837,-1690.5 "/>
<text text-anchor="start" x="1213.302" y="-1677.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># ValueExpression * left</text>
<text text-anchor="start" x="1213.302" y="-1665.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># ValueExpression * right</text>
<text text-anchor="start" x="1213.302" y="-1653.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># BinaryOperator op</text>
<polyline fill="none" stroke="#000000" points="1205.302,-1646.5 1433.837,-1646.5 "/>
<text text-anchor="start" x="1213.302" y="-1633.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ BinaryExpression()</text>
<text text-anchor="start" x="1213.302" y="-1621.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ BinaryExpression(const BinaryExpression &amp;b)</text>
<text text-anchor="start" x="1213.302" y="-1609.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual ~BinaryExpression()</text>
<text text-anchor="start" x="1213.302" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void checkSemantics(CompilationUnit</text>
<text text-anchor="start" x="1213.302" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;cu) const</text>
<text text-anchor="start" x="1213.302" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void optimize()</text>
<text text-anchor="start" x="1213.302" y="-1561.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool isConst() const</text>
<text text-anchor="start" x="1213.302" y="-1549.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void calculateColorTree(LinkingUnit</text>
<text text-anchor="start" x="1213.302" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> *lu, unsigned int expectedOut)</text>
<text text-anchor="start" x="1213.302" y="-1525.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void translate(const Translator</text>
<text text-anchor="start" x="1213.302" y="-1513.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;translation)</text>
<text text-anchor="start" x="1213.302" y="-1501.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ EID addToBlueprint(Blueprint &amp;bp) const</text>
</a>
</g>
</g>
<!-- ValueExpression&#45;&gt;BinaryExpression -->
<g id="edge11" class="edge">
<title>ValueExpression-&gt;BinaryExpression</title>
<path fill="none" stroke="#191970" d="M1080.2672,-2146.7158C1111.8866,-2048.8361 1156.1322,-1921.8761 1204.5695,-1813 1219.7191,-1778.9472 1238.3319,-1742.976 1256.1346,-1710.59"/>
<polygon fill="none" stroke="#191970" points="1076.8839,-2145.8039 1077.1508,-2156.3954 1083.5471,-2147.9492 1076.8839,-2145.8039"/>
</g>
<!-- ValueExpression&#45;&gt;BinaryExpression -->
<g id="edge23" class="edge">
<title>ValueExpression-&gt;BinaryExpression</title>
<path fill="none" stroke="#404040" d="M1116.6851,-2156.2105C1137.9356,-2115.8654 1159.7289,-2071.8166 1177.5695,-2030 1220.8471,-1928.5616 1259.5337,-1809.1586 1285.5553,-1722.3629"/>
<polygon fill="none" stroke="#404040" points="1285.6321,-1722.1051 1283.5142,-1715.212 1289.0625,-1710.6058 1291.1804,-1717.4989 1285.6321,-1722.1051"/>
<text text-anchor="middle" x="1267.0715" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> #left</text>
<text text-anchor="middle" x="1267.0715" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">#right</text>
</g>
<!-- UnaryExpression -->
<g id="node16" class="node">
<title>UnaryExpression</title>
<g id="a_node16"><a xlink:href="$class_unary_expression.html" xlink:title="Unáris operátor.">
<polygon fill="#ffffff" stroke="#000000" points="961.971,-1470.5 961.971,-1734.5 1187.168,-1734.5 1187.168,-1470.5 961.971,-1470.5"/>
<text text-anchor="middle" x="1074.5695" y="-1721.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">UnaryExpression</text>
<polyline fill="none" stroke="#000000" points="961.971,-1714.5 1187.168,-1714.5 "/>
<text text-anchor="start" x="969.971" y="-1701.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ enum Operator op</text>
<text text-anchor="start" x="969.971" y="-1689.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ValueExpression * expr</text>
<polyline fill="none" stroke="#000000" points="961.971,-1682.5 1187.168,-1682.5 "/>
<text text-anchor="start" x="969.971" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ UnaryExpression()</text>
<text text-anchor="start" x="969.971" y="-1657.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ UnaryExpression(const UnaryExpression &amp;u)</text>
<text text-anchor="start" x="969.971" y="-1645.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ValueExpression * clone() const</text>
<text text-anchor="start" x="969.971" y="-1633.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~UnaryExpression()</text>
<text text-anchor="start" x="969.971" y="-1621.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::ostream &amp; printDot(std::ostream</text>
<text text-anchor="start" x="969.971" y="-1609.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;os) const</text>
<text text-anchor="start" x="969.971" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void checkSemantics(CompilationUnit</text>
<text text-anchor="start" x="969.971" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;cu) const</text>
<text text-anchor="start" x="969.971" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void optimize()</text>
<text text-anchor="start" x="969.971" y="-1561.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool isConst() const</text>
<text text-anchor="start" x="969.971" y="-1549.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ int calculate() const</text>
<text text-anchor="start" x="969.971" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void calculateColorTree(LinkingUnit</text>
<text text-anchor="start" x="969.971" y="-1525.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> *lu, unsigned int expected)</text>
<text text-anchor="start" x="969.971" y="-1513.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void translate(const Translator</text>
<text text-anchor="start" x="969.971" y="-1501.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;translation)</text>
<text text-anchor="start" x="969.971" y="-1489.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ EID addToBlueprint(Blueprint &amp;bp) const</text>
<text text-anchor="start" x="969.971" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static ValueExpression * parse(Lexer &amp;lex)</text>
</a>
</g>
</g>
<!-- ValueExpression&#45;&gt;UnaryExpression -->
<g id="edge15" class="edge">
<title>ValueExpression-&gt;UnaryExpression</title>
<path fill="none" stroke="#191970" d="M1050.351,-2146.2145C1054.2633,-2108.1656 1057.9797,-2067.6832 1060.5695,-2030 1067.3667,-1931.0981 1070.8819,-1819.0909 1072.6896,-1734.5428"/>
<polygon fill="none" stroke="#191970" points="1046.8499,-2146.0447 1049.2982,-2156.3528 1053.8125,-2146.7678 1046.8499,-2146.0447"/>
</g>
<!-- ValueExpression&#45;&gt;UnaryExpression -->
<g id="edge21" class="edge">
<title>ValueExpression-&gt;UnaryExpression</title>
<path fill="none" stroke="#404040" d="M1021.8047,-2156.4973C1017.5958,-2058.4602 1016.092,-1927.7829 1028.5045,-1813 1030.8484,-1791.3252 1034.5123,-1768.6103 1038.7737,-1746.452"/>
<polygon fill="none" stroke="#404040" points="1038.7958,-1746.3399 1036.0365,-1739.6776 1041.1251,-1734.5681 1043.8844,-1741.2305 1038.7958,-1746.3399"/>
<text text-anchor="middle" x="1042.602" y="-1918.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> +expr</text>
</g>
<!-- Value -->
<g id="node17" class="node">
<title>Value</title>
<g id="a_node17"><a xlink:href="$class_value.html" xlink:title="Érték.">
<polygon fill="#ffffff" stroke="#000000" points="779.249,-1566.5 779.249,-1638.5 943.89,-1638.5 943.89,-1566.5 779.249,-1566.5"/>
<text text-anchor="middle" x="861.5695" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Value</text>
<polyline fill="none" stroke="#000000" points="779.249,-1618.5 943.89,-1618.5 "/>
<text text-anchor="middle" x="861.5695" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="779.249,-1598.5 943.89,-1598.5 "/>
<text text-anchor="start" x="787.249" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual ~Value()</text>
<text text-anchor="start" x="787.249" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static Value * parse(Lexer &amp;lex)</text>
</a>
</g>
</g>
<!-- ValueExpression&#45;&gt;Value -->
<g id="edge16" class="edge">
<title>ValueExpression-&gt;Value</title>
<path fill="none" stroke="#191970" d="M992.93,-2146.4872C952.7216,-1979.9769 892.572,-1730.8869 870.2841,-1638.5888"/>
<polygon fill="none" stroke="#191970" points="989.5592,-2147.4388 995.3088,-2156.3378 996.3636,-2145.7956 989.5592,-2147.4388"/>
</g>
<!-- Expression -->
<g id="node13" class="node">
<title>Expression</title>
<g id="a_node13"><a xlink:href="$class_expression.html" xlink:title="Egyes precendenciaszintű művelet.">
<polygon fill="#ffffff" stroke="#000000" points="1416.5225,-1145.5 1416.5225,-1277.5 1630.6165,-1277.5 1630.6165,-1145.5 1416.5225,-1145.5"/>
<text text-anchor="middle" x="1523.5695" y="-1264.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Expression</text>
<polyline fill="none" stroke="#000000" points="1416.5225,-1257.5 1630.6165,-1257.5 "/>
<text text-anchor="middle" x="1523.5695" y="-1244.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="1416.5225,-1237.5 1630.6165,-1237.5 "/>
<text text-anchor="start" x="1424.5225" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Expression()</text>
<text text-anchor="start" x="1424.5225" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Expression(const Expression &amp;e)</text>
<text text-anchor="start" x="1424.5225" y="-1200.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ValueExpression * clone() const</text>
<text text-anchor="start" x="1424.5225" y="-1188.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::ostream &amp; printDot(std::ostream</text>
<text text-anchor="start" x="1424.5225" y="-1176.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;os) const</text>
<text text-anchor="start" x="1424.5225" y="-1164.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ int calculate() const</text>
<text text-anchor="start" x="1424.5225" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static ValueExpression * parse(Lexer &amp;lex)</text>
</a>
</g>
</g>
<!-- BinaryExpression&#45;&gt;Expression -->
<g id="edge12" class="edge">
<title>BinaryExpression-&gt;Expression</title>
<path fill="none" stroke="#191970" d="M1380.7147,-1485.3051C1416.1708,-1417.3475 1459.517,-1334.2673 1489.1004,-1277.5658"/>
<polygon fill="none" stroke="#191970" points="1377.5113,-1483.8784 1375.9886,-1494.3633 1383.7174,-1487.1164 1377.5113,-1483.8784"/>
</g>
<!-- Factor -->
<g id="node14" class="node">
<title>Factor</title>
<g id="a_node14"><a xlink:href="$class_factor.html" xlink:title="Hármas precedenciaszintű művelet.">
<polygon fill="#ffffff" stroke="#000000" points="1648.5225,-1145.5 1648.5225,-1277.5 1862.6165,-1277.5 1862.6165,-1145.5 1648.5225,-1145.5"/>
<text text-anchor="middle" x="1755.5695" y="-1264.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Factor</text>
<polyline fill="none" stroke="#000000" points="1648.5225,-1257.5 1862.6165,-1257.5 "/>
<text text-anchor="middle" x="1755.5695" y="-1244.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="1648.5225,-1237.5 1862.6165,-1237.5 "/>
<text text-anchor="start" x="1656.5225" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Factor(const Factor &amp;f)</text>
<text text-anchor="start" x="1656.5225" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ValueExpression * clone() const</text>
<text text-anchor="start" x="1656.5225" y="-1200.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::ostream &amp; printDot(std::ostream</text>
<text text-anchor="start" x="1656.5225" y="-1188.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;os) const</text>
<text text-anchor="start" x="1656.5225" y="-1176.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ int calculate() const</text>
<text text-anchor="start" x="1656.5225" y="-1164.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static ValueExpression * parse(Lexer &amp;lex)</text>
<text text-anchor="start" x="1656.5225" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- Factor()</text>
</a>
</g>
</g>
<!-- BinaryExpression&#45;&gt;Factor -->
<g id="edge13" class="edge">
<title>BinaryExpression-&gt;Factor</title>
<path fill="none" stroke="#191970" d="M1442.3056,-1522.0284C1504.6118,-1478.3452 1579.5978,-1421.247 1639.5695,-1362 1665.3844,-1336.4971 1690.4319,-1305.1237 1710.6052,-1277.6334"/>
<polygon fill="none" stroke="#191970" points="1440.1898,-1519.2369 1433.9925,-1527.8301 1444.196,-1524.9772 1440.1898,-1519.2369"/>
</g>
<!-- Term -->
<g id="node15" class="node">
<title>Term</title>
<g id="a_node15"><a xlink:href="$class_term.html" xlink:title="Kettes precedenciaszintű művelet.">
<polygon fill="#ffffff" stroke="#000000" points="1184.5225,-1145.5 1184.5225,-1277.5 1398.6165,-1277.5 1398.6165,-1145.5 1184.5225,-1145.5"/>
<text text-anchor="middle" x="1291.5695" y="-1264.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Term</text>
<polyline fill="none" stroke="#000000" points="1184.5225,-1257.5 1398.6165,-1257.5 "/>
<text text-anchor="middle" x="1291.5695" y="-1244.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="1184.5225,-1237.5 1398.6165,-1237.5 "/>
<text text-anchor="start" x="1192.5225" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Term()</text>
<text text-anchor="start" x="1192.5225" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Term(const Term &amp;t)</text>
<text text-anchor="start" x="1192.5225" y="-1200.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ValueExpression * clone() const</text>
<text text-anchor="start" x="1192.5225" y="-1188.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::ostream &amp; printDot(std::ostream</text>
<text text-anchor="start" x="1192.5225" y="-1176.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;os) const</text>
<text text-anchor="start" x="1192.5225" y="-1164.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ int calculate() const</text>
<text text-anchor="start" x="1192.5225" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static ValueExpression * parse(Lexer &amp;lex)</text>
</a>
</g>
</g>
<!-- BinaryExpression&#45;&gt;Term -->
<g id="edge14" class="edge">
<title>BinaryExpression-&gt;Term</title>
<path fill="none" stroke="#191970" d="M1311.0875,-1484.0552C1306.2377,-1416.3312 1300.3362,-1333.9202 1296.3006,-1277.5658"/>
<polygon fill="none" stroke="#191970" points="1307.6203,-1484.6389 1311.8257,-1494.3633 1314.6024,-1484.1388 1307.6203,-1484.6389"/>
</g>
<!-- Identifier -->
<g id="node18" class="node">
<title>Identifier</title>
<g id="a_node18"><a xlink:href="$class_identifier.html" xlink:title="Azonosító">
<polygon fill="#ffffff" stroke="#000000" points="760.209,-1061.5 760.209,-1361.5 962.93,-1361.5 962.93,-1061.5 760.209,-1061.5"/>
<text text-anchor="middle" x="861.5695" y="-1348.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Identifier</text>
<polyline fill="none" stroke="#000000" points="760.209,-1341.5 962.93,-1341.5 "/>
<text text-anchor="start" x="768.209" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::string name</text>
<polyline fill="none" stroke="#000000" points="760.209,-1321.5 962.93,-1321.5 "/>
<text text-anchor="start" x="768.209" y="-1308.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Identifier()</text>
<text text-anchor="start" x="768.209" y="-1296.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Identifier(std::string name)</text>
<text text-anchor="start" x="768.209" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Identifier(const Identifier &amp;i)</text>
<text text-anchor="start" x="768.209" y="-1272.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ValueExpression * clone() const</text>
<text text-anchor="start" x="768.209" y="-1260.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::ostream &amp; printDot(std::ostream</text>
<text text-anchor="start" x="768.209" y="-1248.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;os) const</text>
<text text-anchor="start" x="768.209" y="-1236.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const std::string &amp; getName() const</text>
<text text-anchor="start" x="768.209" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool operator&lt;(const Identifier &amp;b) const</text>
<text text-anchor="start" x="768.209" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void checkSemantics(CompilationUnit</text>
<text text-anchor="start" x="768.209" y="-1200.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;cu) const</text>
<text text-anchor="start" x="768.209" y="-1188.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void optimize()</text>
<text text-anchor="start" x="768.209" y="-1176.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool isConst() const</text>
<text text-anchor="start" x="768.209" y="-1164.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ int calculate() const</text>
<text text-anchor="start" x="768.209" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void calculateColorTree(LinkingUnit</text>
<text text-anchor="start" x="768.209" y="-1140.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> *lu, unsigned int expected)</text>
<text text-anchor="start" x="768.209" y="-1128.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool hasOutColor(LinkingUnit *lu) const</text>
<text text-anchor="start" x="768.209" y="-1116.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ unsigned int getOutColor(LinkingUnit</text>
<text text-anchor="start" x="768.209" y="-1104.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> *lu) const</text>
<text text-anchor="start" x="768.209" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void translate(const Translator</text>
<text text-anchor="start" x="768.209" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;translation)</text>
<text text-anchor="start" x="768.209" y="-1068.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static Identifier * parse(Lexer &amp;lex)</text>
</a>
</g>
</g>
<!-- Value&#45;&gt;Identifier -->
<g id="edge17" class="edge">
<title>Value-&gt;Identifier</title>
<path fill="none" stroke="#191970" d="M861.5695,-1556.3717C861.5695,-1508.5026 861.5695,-1431.0695 861.5695,-1361.6923"/>
<polygon fill="none" stroke="#191970" points="858.0696,-1556.4165 861.5695,-1566.4165 865.0696,-1556.4165 858.0696,-1556.4165"/>
</g>
<!-- Number -->
<g id="node19" class="node">
<title>Number</title>
<g id="a_node19"><a xlink:href="$class_number.html" xlink:title="Konstans számérték.">
<polygon fill="#ffffff" stroke="#000000" points="980.9715,-1115.5 980.9715,-1307.5 1166.1675,-1307.5 1166.1675,-1115.5 980.9715,-1115.5"/>
<text text-anchor="middle" x="1073.5695" y="-1294.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Number</text>
<polyline fill="none" stroke="#000000" points="980.9715,-1287.5 1166.1675,-1287.5 "/>
<text text-anchor="start" x="988.9715" y="-1274.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- int value</text>
<polyline fill="none" stroke="#000000" points="980.9715,-1267.5 1166.1675,-1267.5 "/>
<text text-anchor="start" x="988.9715" y="-1254.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Number(int val)</text>
<text text-anchor="start" x="988.9715" y="-1242.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ValueExpression * clone() const</text>
<text text-anchor="start" x="988.9715" y="-1230.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::ostream &amp; printDot(std::ostream</text>
<text text-anchor="start" x="988.9715" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;os) const</text>
<text text-anchor="start" x="988.9715" y="-1206.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void optimize()</text>
<text text-anchor="start" x="988.9715" y="-1194.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool isConst() const</text>
<text text-anchor="start" x="988.9715" y="-1182.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ int calculate() const</text>
<text text-anchor="start" x="988.9715" y="-1170.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void calculateColorTree(LinkingUnit</text>
<text text-anchor="start" x="988.9715" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> *lu, unsigned int expected)</text>
<text text-anchor="start" x="988.9715" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void translate(const Translator</text>
<text text-anchor="start" x="988.9715" y="-1134.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;translation)</text>
<text text-anchor="start" x="988.9715" y="-1122.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static Number * parse(Lexer &amp;lex)</text>
</a>
</g>
</g>
<!-- Value&#45;&gt;Number -->
<g id="edge18" class="edge">
<title>Value-&gt;Number</title>
<path fill="none" stroke="#191970" d="M881.5023,-1556.8561C899.1109,-1517.4217 926.0449,-1459.193 952.5695,-1410 970.8623,-1376.0739 992.3458,-1339.8358 1012.0937,-1307.732"/>
<polygon fill="none" stroke="#191970" points="878.0969,-1555.9004 877.2324,-1566.4599 884.4932,-1558.7443 878.0969,-1555.9004"/>
</g>
<!-- Identifier&#45;&gt;Assignment -->
<g id="edge32" class="edge">
<title>Identifier-&gt;Assignment</title>
<path fill="none" stroke="#404040" d="M913.3552,-1061.4173C919.0619,-1044.8785 924.8016,-1028.244 930.3188,-1012.2543"/>
<polygon fill="none" stroke="#404040" points="930.3791,-1012.0795 928.5549,-1005.1029 934.2933,-1000.7358 936.1174,-1007.7124 930.3791,-1012.0795"/>
<text text-anchor="middle" x="929.7925" y="-1034" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> -to</text>
</g>
<!-- Identifier&#45;&gt;ModuleConnection -->
<g id="edge40" class="edge">
<title>Identifier-&gt;ModuleConnection</title>
<path fill="none" stroke="#404040" d="M796.3579,-1061.4173C790.9297,-1048.9247 785.4779,-1036.3774 780.141,-1024.0947"/>
<polygon fill="none" stroke="#404040" points="780.0582,-1023.9041 773.9985,-1019.9951 775.276,-1012.8981 781.3358,-1016.807 780.0582,-1023.9041"/>
<text text-anchor="middle" x="807.5135" y="-1034" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> -identifier</text>
</g>
<!-- Identifier&#45;&gt;VariableDeclaration -->
<g id="edge46" class="edge">
<title>Identifier-&gt;VariableDeclaration</title>
<path fill="none" stroke="#404040" d="M760.0081,-1139.1787C709.094,-1102.2648 646.873,-1056.1466 592.5695,-1013 590.6828,-1011.5009 588.7854,-1009.9857 586.8796,-1008.4568"/>
<polygon fill="none" stroke="#404040" points="586.6264,-1008.2521 579.4456,-1007.5917 577.2934,-1000.7092 584.4742,-1001.3697 586.6264,-1008.2521"/>
<text text-anchor="middle" x="661.069" y="-1034" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> -varsDeclared</text>
</g>
<!-- Identifier&#45;&gt;Module -->
<g id="edge36" class="edge">
<title>Identifier-&gt;Module</title>
<path fill="none" stroke="#404040" d="M962.9756,-1068.2526C965.7997,-1065.7493 968.6651,-1063.3273 971.5695,-1061 1013.1948,-1027.6448 1051.6726,-1057.1748 1081.5695,-1013 1095.8104,-991.958 1099.3806,-665.1456 1100.2733,-494.5135"/>
<polygon fill="none" stroke="#404040" points="1100.2733,-494.5041 1096.3032,-488.4843 1100.3331,-482.5043 1104.3031,-488.5241 1100.2733,-494.5041"/>
<text text-anchor="middle" x="1120.6285" y="-757" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> #identifier</text>
</g>
<!-- Identifier&#45;&gt;Module -->
<g id="edge47" class="edge">
<title>Identifier-&gt;Module</title>
<path fill="none" stroke="#404040" d="M963.1699,-1066.85C965.9206,-1064.8064 968.7207,-1062.8526 971.5695,-1061 1003.2132,-1040.4216 1019.5363,-1057.0523 1054.5695,-1043 1078.2693,-1033.4937 1089.1753,-1034.0917 1103.5695,-1013 1209.4518,-857.8514 1169.7088,-626.196 1133.5932,-494.2257"/>
<polygon fill="none" stroke="#404040" points="1133.5618,-494.1127 1128.0966,-489.4082 1130.3372,-482.554 1135.8024,-487.2585 1133.5618,-494.1127"/>
<text text-anchor="middle" x="1237.8565" y="-757" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> -recalculateDefinedVariables</text>
</g>
<!-- Identifier&#45;&gt;Parameter -->
<g id="edge24" class="edge">
<title>Identifier-&gt;Parameter</title>
<path fill="none" stroke="#404040" d="M759.9798,-1148.6052C706.7678,-1118.1329 639.5161,-1083.3817 575.5695,-1061 468.369,-1023.4792 423.3581,-1069.0407 324.5695,-1013 316.3474,-1008.3358 308.4438,-1002.7626 300.9286,-996.6224"/>
<polygon fill="none" stroke="#404040" points="300.6956,-996.4208 293.5411,-995.5185 291.6223,-988.5673 298.7767,-989.4696 300.6956,-996.4208"/>
<text text-anchor="middle" x="438.5135" y="-1034" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> -identifier</text>
</g>
<!-- ProgrammingError -->
<g id="node20" class="node">
<title>ProgrammingError</title>
<g id="a_node20"><a xlink:href="$class_programming_error.html" xlink:title="Base class programozói hibáknak.">
<polygon fill="#ffffff" stroke="#000000" points="2618.1835,-2270.5 2618.1835,-2342.5 2766.9555,-2342.5 2766.9555,-2270.5 2618.1835,-2270.5"/>
<text text-anchor="middle" x="2692.5695" y="-2329.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">ProgrammingError</text>
<polyline fill="none" stroke="#000000" points="2618.1835,-2322.5 2766.9555,-2322.5 "/>
<text text-anchor="start" x="2626.1835" y="-2309.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># char * whatData</text>
<polyline fill="none" stroke="#000000" points="2618.1835,-2302.5 2766.9555,-2302.5 "/>
<text text-anchor="start" x="2626.1835" y="-2289.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual ~ProgrammingError()</text>
<text text-anchor="start" x="2626.1835" y="-2277.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const char * what() const</text>
</a>
</g>
</g>
<!-- VariableAlreadyDefinedError -->
<g id="node21" class="node">
<title>VariableAlreadyDefinedError</title>
<g id="a_node21"><a xlink:href="$class_variable_already_defined_error.html" xlink:title="Már definiált változó">
<polygon fill="#ffffff" stroke="#000000" points="1919.0305,-1566.5 1919.0305,-1638.5 2098.1085,-1638.5 2098.1085,-1566.5 1919.0305,-1566.5"/>
<text text-anchor="middle" x="2008.5695" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">VariableAlreadyDefinedError</text>
<polyline fill="none" stroke="#000000" points="1919.0305,-1618.5 2098.1085,-1618.5 "/>
<text text-anchor="middle" x="2008.5695" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="1919.0305,-1598.5 2098.1085,-1598.5 "/>
<text text-anchor="start" x="1927.0305" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ VariableAlreadyDefinedError(const</text>
<text text-anchor="start" x="1927.0305" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> Identifier *var)</text>
</a>
</g>
</g>
<!-- ProgrammingError&#45;&gt;VariableAlreadyDefinedError -->
<g id="edge19" class="edge">
<title>ProgrammingError-&gt;VariableAlreadyDefinedError</title>
<path fill="none" stroke="#191970" d="M2626.7438,-2264.7159C2548.6248,-2213.7285 2416.1701,-2122.7896 2314.5695,-2030 2211.7949,-1936.1382 2185.9956,-1909.9869 2107.5695,-1795 2072.6301,-1743.7724 2041.6031,-1678.6119 2023.9598,-1638.7599"/>
<polygon fill="none" stroke="#191970" points="2625.2378,-2267.9117 2635.5288,-2270.4308 2629.055,-2262.044 2625.2378,-2267.9117"/>
</g>
<!-- VariableReassignmentError -->
<g id="node23" class="node">
<title>VariableReassignmentError</title>
<g id="a_node23"><a xlink:href="$class_variable_reassignment_error.html" xlink:title="Újraértékadás.">
<polygon fill="#ffffff" stroke="#000000" points="2116.254,-1566.5 2116.254,-1638.5 2290.885,-1638.5 2290.885,-1566.5 2116.254,-1566.5"/>
<text text-anchor="middle" x="2203.5695" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">VariableReassignmentError</text>
<polyline fill="none" stroke="#000000" points="2116.254,-1618.5 2290.885,-1618.5 "/>
<text text-anchor="middle" x="2203.5695" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="2116.254,-1598.5 2290.885,-1598.5 "/>
<text text-anchor="start" x="2124.254" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ VariableReassignmentError(const</text>
<text text-anchor="start" x="2124.254" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> Identifier *to)</text>
</a>
</g>
</g>
<!-- ProgrammingError&#45;&gt;VariableReassignmentError -->
<g id="edge22" class="edge">
<title>ProgrammingError-&gt;VariableReassignmentError</title>
<path fill="none" stroke="#191970" d="M2654.2332,-2262.7233C2580.134,-2176.8606 2414.4432,-1978.688 2299.5695,-1795 2266.9959,-1742.9134 2236.6454,-1678.2817 2219.1109,-1638.7342"/>
<polygon fill="none" stroke="#191970" points="2651.712,-2265.1586 2660.9009,-2270.4326 2657.0065,-2260.5795 2651.712,-2265.1586"/>
</g>
<!-- EmptyParameterListError -->
<g id="node26" class="node">
<title>EmptyParameterListError</title>
<g id="a_node26"><a xlink:href="$class_empty_parameter_list_error.html" xlink:title="Paraméter nélkül modul.">
<polygon fill="#ffffff" stroke="#000000" points="2308.87,-1566.5 2308.87,-1638.5 2486.269,-1638.5 2486.269,-1566.5 2308.87,-1566.5"/>
<text text-anchor="middle" x="2397.5695" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">EmptyParameterListError</text>
<polyline fill="none" stroke="#000000" points="2308.87,-1618.5 2486.269,-1618.5 "/>
<text text-anchor="middle" x="2397.5695" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="2308.87,-1598.5 2486.269,-1598.5 "/>
<text text-anchor="start" x="2316.87" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ EmptyParameterListError(Token t)</text>
<text text-anchor="start" x="2316.87" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~EmptyParameterListError()</text>
</a>
</g>
</g>
<!-- ProgrammingError&#45;&gt;EmptyParameterListError -->
<g id="edge27" class="edge">
<title>ProgrammingError-&gt;EmptyParameterListError</title>
<path fill="none" stroke="#191970" d="M2673.4124,-2260.7828C2618.6383,-2130.0675 2462.1384,-1756.5899 2412.7177,-1638.6503"/>
<polygon fill="none" stroke="#191970" points="2670.2374,-2262.262 2677.3302,-2270.1324 2676.6935,-2259.5567 2670.2374,-2262.262"/>
</g>
<!-- MismatchedParametersError -->
<g id="node27" class="node">
<title>MismatchedParametersError</title>
<g id="a_node27"><a xlink:href="$class_mismatched_parameters_error.html" xlink:title="Eltérő paraméterszám.">
<polygon fill="#ffffff" stroke="#000000" points="2504.7585,-1566.5 2504.7585,-1638.5 2684.3805,-1638.5 2684.3805,-1566.5 2504.7585,-1566.5"/>
<text text-anchor="middle" x="2594.5695" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">MismatchedParametersError</text>
<polyline fill="none" stroke="#000000" points="2504.7585,-1618.5 2684.3805,-1618.5 "/>
<text text-anchor="middle" x="2594.5695" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="2504.7585,-1598.5 2684.3805,-1598.5 "/>
<text text-anchor="start" x="2512.7585" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ MismatchedParametersError(const</text>
<text text-anchor="start" x="2512.7585" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> Identifier *at)</text>
</a>
</g>
</g>
<!-- ProgrammingError&#45;&gt;MismatchedParametersError -->
<g id="edge28" class="edge">
<title>ProgrammingError-&gt;MismatchedParametersError</title>
<path fill="none" stroke="#191970" d="M2686.0958,-2259.9948C2667.8013,-2128.5731 2615.9867,-1756.3538 2599.6018,-1638.6503"/>
<polygon fill="none" stroke="#191970" points="2682.6615,-2260.7104 2687.507,-2270.1324 2689.5947,-2259.7453 2682.6615,-2260.7104"/>
</g>
<!-- ModuleAlreadyDefinedError -->
<g id="node28" class="node">
<title>ModuleAlreadyDefinedError</title>
<g id="a_node28"><a xlink:href="$class_module_already_defined_error.html" xlink:title="A modul már definiálva van.">
<polygon fill="#ffffff" stroke="#000000" points="2702.03,-1566.5 2702.03,-1638.5 2881.109,-1638.5 2881.109,-1566.5 2702.03,-1566.5"/>
<text text-anchor="middle" x="2791.5695" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">ModuleAlreadyDefinedError</text>
<polyline fill="none" stroke="#000000" points="2702.03,-1618.5 2881.109,-1618.5 "/>
<text text-anchor="middle" x="2791.5695" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="2702.03,-1598.5 2881.109,-1598.5 "/>
<text text-anchor="start" x="2710.03" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ModuleAlreadyDefinedError(Token</text>
<text text-anchor="start" x="2710.03" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> identifier)</text>
</a>
</g>
</g>
<!-- ProgrammingError&#45;&gt;ModuleAlreadyDefinedError -->
<g id="edge29" class="edge">
<title>ProgrammingError-&gt;ModuleAlreadyDefinedError</title>
<path fill="none" stroke="#191970" d="M2699.1093,-2259.9948C2717.5905,-2128.5731 2769.9338,-1756.3538 2786.4859,-1638.6503"/>
<polygon fill="none" stroke="#191970" points="2695.6104,-2259.7424 2697.6837,-2270.1324 2702.5422,-2260.7172 2695.6104,-2259.7424"/>
</g>
<!-- ModuleNotDefinedError -->
<g id="node29" class="node">
<title>ModuleNotDefinedError</title>
<g id="a_node29"><a xlink:href="$class_module_not_defined_error.html" xlink:title="Definiálatlan modul.">
<polygon fill="#ffffff" stroke="#000000" points="2899.193,-1572.5 2899.193,-1632.5 3139.946,-1632.5 3139.946,-1572.5 2899.193,-1572.5"/>
<text text-anchor="middle" x="3019.5695" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">ModuleNotDefinedError</text>
<polyline fill="none" stroke="#000000" points="2899.193,-1612.5 3139.946,-1612.5 "/>
<text text-anchor="middle" x="3019.5695" y="-1599.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="2899.193,-1592.5 3139.946,-1592.5 "/>
<text text-anchor="start" x="2907.193" y="-1579.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ModuleNotDefinedError(const Identifier *module)</text>
</a>
</g>
</g>
<!-- ProgrammingError&#45;&gt;ModuleNotDefinedError -->
<g id="edge30" class="edge">
<title>ProgrammingError-&gt;ModuleNotDefinedError</title>
<path fill="none" stroke="#191970" d="M2713.6986,-2261.011C2775.4002,-2128.1735 2954.1988,-1743.237 3005.598,-1632.5793"/>
<polygon fill="none" stroke="#191970" points="2710.5003,-2259.5885 2709.4619,-2270.1324 2716.8488,-2262.5374 2710.5003,-2259.5885"/>
</g>
<!-- UndefinedVariableError -->
<g id="node30" class="node">
<title>UndefinedVariableError</title>
<g id="a_node30"><a xlink:href="$class_undefined_variable_error.html" xlink:title="Definiálatlan változó">
<polygon fill="#ffffff" stroke="#000000" points="3157.9165,-1572.5 3157.9165,-1632.5 3379.2225,-1632.5 3379.2225,-1572.5 3157.9165,-1572.5"/>
<text text-anchor="middle" x="3268.5695" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">UndefinedVariableError</text>
<polyline fill="none" stroke="#000000" points="3157.9165,-1612.5 3379.2225,-1612.5 "/>
<text text-anchor="middle" x="3268.5695" y="-1599.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="3157.9165,-1592.5 3379.2225,-1592.5 "/>
<text text-anchor="start" x="3165.9165" y="-1579.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ UndefinedVariableError(const Identifier *var)</text>
</a>
</g>
</g>
<!-- ProgrammingError&#45;&gt;UndefinedVariableError -->
<g id="edge31" class="edge">
<title>ProgrammingError-&gt;UndefinedVariableError</title>
<path fill="none" stroke="#191970" d="M2736.0233,-2263.0143C2820.4601,-2177.4233 3010.5081,-1979.3649 3148.5695,-1795 3189.5257,-1740.3077 3230.0859,-1671.3293 3251.9747,-1632.5506"/>
<polygon fill="none" stroke="#191970" points="2733.4534,-2260.6355 2728.9135,-2270.2084 2738.4322,-2265.5561 2733.4534,-2260.6355"/>
</g>
<!-- std::exception -->
<g id="node22" class="node">
<title>std::exception</title>
<g id="a_node22"><a xlink:title=" ">
<polygon fill="#ffffff" stroke="#bfbfbf" points="2785.725,-2709.5 2785.725,-2769.5 2863.414,-2769.5 2863.414,-2709.5 2785.725,-2709.5"/>
<text text-anchor="middle" x="2824.5695" y="-2756.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">std::exception</text>
<polyline fill="none" stroke="#bfbfbf" points="2785.725,-2749.5 2863.414,-2749.5 "/>
<text text-anchor="middle" x="2824.5695" y="-2736.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#bfbfbf" points="2785.725,-2729.5 2863.414,-2729.5 "/>
<text text-anchor="middle" x="2824.5695" y="-2716.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
</a>
</g>
</g>
<!-- std::exception&#45;&gt;ProgrammingError -->
<g id="edge20" class="edge">
<title>std::exception-&gt;ProgrammingError</title>
<path fill="none" stroke="#191970" d="M2812.4533,-2699.7552C2786.9603,-2616.1304 2728.1145,-2423.0984 2703.6006,-2342.6853"/>
<polygon fill="none" stroke="#191970" points="2809.1283,-2700.8513 2815.3923,-2709.3961 2815.8241,-2698.81 2809.1283,-2700.8513"/>
</g>
<!-- ParserError -->
<g id="node24" class="node">
<title>ParserError</title>
<g id="a_node24"><a xlink:href="$class_parser_error.html" xlink:title="Base class feldolgozás közbeni hibáknak.">
<polygon fill="#ffffff" stroke="#000000" points="3526.2505,-2270.5 3526.2505,-2342.5 3660.8885,-2342.5 3660.8885,-2270.5 3526.2505,-2270.5"/>
<text text-anchor="middle" x="3593.5695" y="-2329.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">ParserError</text>
<polyline fill="none" stroke="#000000" points="3526.2505,-2322.5 3660.8885,-2322.5 "/>
<text text-anchor="start" x="3534.2505" y="-2309.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># char * whatData</text>
<polyline fill="none" stroke="#000000" points="3526.2505,-2302.5 3660.8885,-2302.5 "/>
<text text-anchor="start" x="3534.2505" y="-2289.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const char * what() const</text>
<text text-anchor="start" x="3534.2505" y="-2277.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual ~ParserError()</text>
</a>
</g>
</g>
<!-- std::exception&#45;&gt;ParserError -->
<g id="edge26" class="edge">
<title>std::exception-&gt;ParserError</title>
<path fill="none" stroke="#191970" d="M2872.2574,-2712.6485C3004.9808,-2637.916 3378.7835,-2427.4393 3529.4439,-2342.6072"/>
<polygon fill="none" stroke="#191970" points="2870.4924,-2709.6255 2863.496,-2717.5817 2873.9269,-2715.725 2870.4924,-2709.6255"/>
</g>
<!-- UnexpectedSymbolError -->
<g id="node25" class="node">
<title>UnexpectedSymbolError</title>
<g id="a_node25"><a xlink:href="$class_unexpected_symbol_error.html" xlink:title="Váratlan token hiba.">
<polygon fill="#ffffff" stroke="#000000" points="3397.2495,-1566.5 3397.2495,-1638.5 3581.8895,-1638.5 3581.8895,-1566.5 3397.2495,-1566.5"/>
<text text-anchor="middle" x="3489.5695" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">UnexpectedSymbolError</text>
<polyline fill="none" stroke="#000000" points="3397.2495,-1618.5 3581.8895,-1618.5 "/>
<text text-anchor="middle" x="3489.5695" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="3397.2495,-1598.5 3581.8895,-1598.5 "/>
<text text-anchor="start" x="3405.2495" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ UnexpectedSymbolError(Token got)</text>
<text text-anchor="start" x="3405.2495" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~UnexpectedSymbolError()</text>
</a>
</g>
</g>
<!-- ParserError&#45;&gt;UnexpectedSymbolError -->
<g id="edge25" class="edge">
<title>ParserError-&gt;UnexpectedSymbolError</title>
<path fill="none" stroke="#191970" d="M3586.6994,-2259.9948C3567.2848,-2128.5731 3512.2979,-1756.3538 3494.9099,-1638.6503"/>
<polygon fill="none" stroke="#191970" points="3583.2731,-2260.7512 3588.197,-2270.1324 3590.1979,-2259.7282 3583.2731,-2260.7512"/>
</g>
<!-- TokenExpectedError -->
<g id="node31" class="node">
<title>TokenExpectedError</title>
<g id="a_node31"><a xlink:href="$class_token_expected_error.html" xlink:title="Várt token hiba.">
<polygon fill="#ffffff" stroke="#000000" points="3599.7945,-1560.5 3599.7945,-1644.5 3793.3445,-1644.5 3793.3445,-1560.5 3599.7945,-1560.5"/>
<text text-anchor="middle" x="3696.5695" y="-1631.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">TokenExpectedError</text>
<polyline fill="none" stroke="#000000" points="3599.7945,-1624.5 3793.3445,-1624.5 "/>
<text text-anchor="middle" x="3696.5695" y="-1611.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="3599.7945,-1604.5 3793.3445,-1604.5 "/>
<text text-anchor="start" x="3607.7945" y="-1591.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ TokenExpectedError(Token expected,</text>
<text text-anchor="start" x="3607.7945" y="-1579.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> Token got)</text>
<text text-anchor="start" x="3607.7945" y="-1567.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~TokenExpectedError()</text>
</a>
</g>
</g>
<!-- ParserError&#45;&gt;TokenExpectedError -->
<g id="edge34" class="edge">
<title>ParserError-&gt;TokenExpectedError</title>
<path fill="none" stroke="#191970" d="M3600.3481,-2260.1683C3619.2329,-2131.0922 3672.2424,-1768.7747 3690.3869,-1644.7581"/>
<polygon fill="none" stroke="#191970" points="3596.8749,-2259.731 3598.8903,-2270.1324 3603.8012,-2260.7444 3596.8749,-2259.731"/>
</g>
<!-- UnableToRepresentError -->
<g id="node32" class="node">
<title>UnableToRepresentError</title>
<g id="a_node32"><a xlink:href="$class_unable_to_represent_error.html" xlink:title="Túlcsordulási hiba.">
<polygon fill="#ffffff" stroke="#000000" points="3811.73,-1572.5 3811.73,-1632.5 3939.409,-1632.5 3939.409,-1572.5 3811.73,-1572.5"/>
<text text-anchor="middle" x="3875.5695" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">UnableToRepresentError</text>
<polyline fill="none" stroke="#000000" points="3811.73,-1612.5 3939.409,-1612.5 "/>
<text text-anchor="middle" x="3875.5695" y="-1599.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="3811.73,-1592.5 3939.409,-1592.5 "/>
<text text-anchor="middle" x="3875.5695" y="-1579.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
</a>
</g>
</g>
<!-- ParserError&#45;&gt;UnableToRepresentError -->
<g id="edge35" class="edge">
<title>ParserError-&gt;UnableToRepresentError</title>
<path fill="none" stroke="#8b1a1a" d="M3612.585,-2261.0723C3649.7817,-2171.9688 3734.4817,-1967.8827 3802.5695,-1795 3825.0973,-1737.7992 3850.3068,-1670.5644 3864.425,-1632.6001"/>
<polygon fill="none" stroke="#8b1a1a" points="3609.3356,-2259.7708 3608.7113,-2270.3473 3615.7949,-2262.4686 3609.3356,-2259.7708"/>
</g>
<!-- Entity -->
<g id="node33" class="node">
<title>Entity</title>
<g id="a_node33"><a xlink:href="$class_entity.html" xlink:title="Áramkörbe köthető elem.">
<polygon fill="#ffffff" stroke="#000000" points="4210.319,-2048.5 4210.319,-2564.5 4440.82,-2564.5 4440.82,-2048.5 4210.319,-2048.5"/>
<text text-anchor="middle" x="4325.5695" y="-2551.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Entity</text>
<polyline fill="none" stroke="#000000" points="4210.319,-2544.5 4440.82,-2544.5 "/>
<text text-anchor="start" x="4218.319" y="-2531.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># EID id</text>
<text text-anchor="start" x="4218.319" y="-2519.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># std::string prototypeName</text>
<text text-anchor="start" x="4218.319" y="-2507.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># Position pos</text>
<text text-anchor="start" x="4218.319" y="-2495.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># unsigned int outSignal</text>
<text text-anchor="start" x="4218.319" y="-2483.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># unsigned int inSignal</text>
<text text-anchor="start" x="4218.319" y="-2471.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># bool inConst</text>
<text text-anchor="start" x="4218.319" y="-2459.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># const int reach</text>
<text text-anchor="start" x="4218.319" y="-2447.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># std::vector&lt; EID &gt; outgoingRedConnections</text>
<text text-anchor="start" x="4218.319" y="-2435.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># std::vector&lt; EID &gt; incomingRedConnections</text>
<text text-anchor="start" x="4218.319" y="-2423.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># std::vector&lt; EID &gt; outgoingGreenConnections</text>
<text text-anchor="start" x="4218.319" y="-2411.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># std::vector&lt; EID &gt; incomingGreenConnections</text>
<text text-anchor="start" x="4218.319" y="-2399.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># static unsigned int GLOBAL_ENTITY_ID</text>
<polyline fill="none" stroke="#000000" points="4210.319,-2392.5 4440.82,-2392.5 "/>
<text text-anchor="start" x="4218.319" y="-2379.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Entity(std::string pName, int reach,</text>
<text text-anchor="start" x="4218.319" y="-2367.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> float x=0, float y=0)</text>
<text text-anchor="start" x="4218.319" y="-2355.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual ~Entity()</text>
<text text-anchor="start" x="4218.319" y="-2343.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void setConst(int side, unsigned</text>
<text text-anchor="start" x="4218.319" y="-2331.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> int value)</text>
<text text-anchor="start" x="4218.319" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void setPos(float nX, float nY)</text>
<text text-anchor="start" x="4218.319" y="-2307.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void setPos(const Position &amp;p)</text>
<text text-anchor="start" x="4218.319" y="-2295.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void addIncomingConnection(EID from,</text>
<text text-anchor="start" x="4218.319" y="-2283.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> bool red=true)</text>
<text text-anchor="start" x="4218.319" y="-2271.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void addOutgoingConnection(EID to,</text>
<text text-anchor="start" x="4218.319" y="-2259.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> bool red=true)</text>
<text text-anchor="start" x="4218.319" y="-2247.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ EID getEID() const</text>
<text text-anchor="start" x="4218.319" y="-2235.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ int getReach() const</text>
<text text-anchor="start" x="4218.319" y="-2223.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Position &amp; getPosition()</text>
<text text-anchor="start" x="4218.319" y="-2211.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const Position &amp; getPosition() const</text>
<text text-anchor="start" x="4218.319" y="-2199.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual std::string getConnectionString() const</text>
<text text-anchor="start" x="4218.319" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ virtual std::string toBlueprint</text>
<text text-anchor="start" x="4218.319" y="-2175.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">() const =0</text>
<text text-anchor="start" x="4218.319" y="-2163.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool checkConnections(const std</text>
<text text-anchor="start" x="4218.319" y="-2151.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">::map&lt; EID, Entity * &gt; &amp;entities) const</text>
<text text-anchor="start" x="4218.319" y="-2139.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool checkConnections(const std</text>
<text text-anchor="start" x="4218.319" y="-2127.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">::map&lt; EID, Entity * &gt; &amp;entities,</text>
<text text-anchor="start" x="4218.319" y="-2115.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> const std::vector&lt; EID &gt; &amp;conns) const</text>
<text text-anchor="start" x="4218.319" y="-2103.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Position getDesiredPosition(const</text>
<text text-anchor="start" x="4218.319" y="-2091.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> std::map&lt; EID, Entity * &gt; &amp;entities) const</text>
<text text-anchor="start" x="4218.319" y="-2079.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ float distanceTo(const Entity &amp;e) const</text>
<text text-anchor="start" x="4218.319" y="-2067.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ int connections() const</text>
<text text-anchor="start" x="4218.319" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ static void resetGlobalID()</text>
</a>
</g>
</g>
<!-- ArithmeticCombinator -->
<g id="node34" class="node">
<title>ArithmeticCombinator</title>
<g id="a_node34"><a xlink:href="$class_arithmetic_combinator.html" xlink:title="Aritmetikai kombinátor.">
<polygon fill="#ffffff" stroke="#000000" points="3957.0255,-1542.5 3957.0255,-1662.5 4206.1135,-1662.5 4206.1135,-1542.5 3957.0255,-1542.5"/>
<text text-anchor="middle" x="4081.5695" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">ArithmeticCombinator</text>
<polyline fill="none" stroke="#000000" points="3957.0255,-1642.5 4206.1135,-1642.5 "/>
<text text-anchor="start" x="3965.0255" y="-1629.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Operation op</text>
<polyline fill="none" stroke="#000000" points="3957.0255,-1622.5 4206.1135,-1622.5 "/>
<text text-anchor="start" x="3965.0255" y="-1609.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ArithmeticCombinator()</text>
<text text-anchor="start" x="3965.0255" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ArithmeticCombinator(const ValueExpression &amp;ve)</text>
<text text-anchor="start" x="3965.0255" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ArithmeticCombinator(Operation op)</text>
<text text-anchor="start" x="3965.0255" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::string getControlString() const</text>
<text text-anchor="start" x="3965.0255" y="-1561.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::string getOperationString() const</text>
<text text-anchor="start" x="3965.0255" y="-1549.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::string toBlueprint() const</text>
</a>
</g>
</g>
<!-- Entity&#45;&gt;ArithmeticCombinator -->
<g id="edge38" class="edge">
<title>Entity-&gt;ArithmeticCombinator</title>
<path fill="none" stroke="#191970" d="M4232.6822,-2038.4972C4185.0777,-1901.1465 4131.1926,-1745.6748 4102.3794,-1662.5416"/>
<polygon fill="none" stroke="#191970" points="4229.5165,-2040.0515 4236.0984,-2048.3539 4236.1306,-2037.7591 4229.5165,-2040.0515"/>
</g>
<!-- Blueprint -->
<g id="node36" class="node">
<title>Blueprint</title>
<g id="a_node36"><a xlink:title="Factorio tervrajz.">
<polygon fill="#ffffff" stroke="#000000" points="4224.498,-1410.5 4224.498,-1794.5 4426.641,-1794.5 4426.641,-1410.5 4224.498,-1410.5"/>
<text text-anchor="middle" x="4325.5695" y="-1781.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Blueprint</text>
<polyline fill="none" stroke="#000000" points="4224.498,-1774.5 4426.641,-1774.5 "/>
<text text-anchor="start" x="4232.498" y="-1761.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- const unsigned int POLE_REACH</text>
<text text-anchor="start" x="4232.498" y="-1749.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- const unsigned int POLE_DIM</text>
<text text-anchor="start" x="4232.498" y="-1737.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- const std::string POLE_NAME</text>
<text text-anchor="start" x="4232.498" y="-1725.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::string name</text>
<text text-anchor="start" x="4232.498" y="-1713.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::map&lt; EID, Entity * &gt; entities</text>
<text text-anchor="start" x="4232.498" y="-1701.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- float x</text>
<text text-anchor="start" x="4232.498" y="-1689.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- float y</text>
<polyline fill="none" stroke="#000000" points="4224.498,-1682.5 4426.641,-1682.5 "/>
<text text-anchor="start" x="4232.498" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Blueprint(const unsigned int reach,</text>
<text text-anchor="start" x="4232.498" y="-1657.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> const unsigned int dim, const std</text>
<text text-anchor="start" x="4232.498" y="-1645.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">::string poleName, const Module *module)</text>
<text text-anchor="start" x="4232.498" y="-1633.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~Blueprint()</text>
<text text-anchor="start" x="4232.498" y="-1621.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void connect(EID from, EID to)</text>
<text text-anchor="start" x="4232.498" y="-1609.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ EID addEntity(Entity *e)</text>
<text text-anchor="start" x="4232.498" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ EID addEntity(Entity *e, float x, float y)</text>
<text text-anchor="start" x="4232.498" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void moveEntity(Entity *e, const</text>
<text text-anchor="start" x="4232.498" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> Position &amp;newPos)</text>
<text text-anchor="start" x="4232.498" y="-1561.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void openColumn()</text>
<text text-anchor="start" x="4232.498" y="-1549.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Position getOpenPositionNear(const</text>
<text text-anchor="start" x="4232.498" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> Position &amp;pos, float maxDist, int</text>
<text text-anchor="start" x="4232.498" y="-1525.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> ignore=0) const</text>
<text text-anchor="start" x="4232.498" y="-1513.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const std::map&lt; EID, Entity * &gt;</text>
<text text-anchor="start" x="4232.498" y="-1501.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp; getEntities() const</text>
<text text-anchor="start" x="4232.498" y="-1489.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::string getName() const</text>
<text text-anchor="start" x="4232.498" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Entity *&amp; at(const Position &amp;pos)</text>
<text text-anchor="start" x="4232.498" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Entity *const &amp; at(const Position</text>
<text text-anchor="start" x="4232.498" y="-1453.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;pos) const</text>
<text text-anchor="start" x="4232.498" y="-1441.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool canCombinatorFit(const Position</text>
<text text-anchor="start" x="4232.498" y="-1429.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;pos) const</text>
<text text-anchor="start" x="4232.498" y="-1417.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void printArea(std::ostream &amp;os) const</text>
</a>
</g>
</g>
<!-- Entity&#45;&gt;Blueprint -->
<g id="edge42" class="edge">
<title>Entity-&gt;Blueprint</title>
<path fill="none" stroke="#404040" d="M4325.5695,-2048.3539C4325.5695,-1968.7328 4325.5695,-1882.2002 4325.5695,-1806.7374"/>
<polygon fill="none" stroke="#404040" points="4325.5696,-1806.7239 4321.5695,-1800.7239 4325.5695,-1794.7239 4329.5695,-1800.7239 4325.5696,-1806.7239"/>
<text text-anchor="middle" x="4338.6265" y="-1918.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> -area</text>
</g>
<!-- Pole -->
<g id="node37" class="node">
<title>Pole</title>
<g id="a_node37"><a xlink:href="$class_pole.html" xlink:title="Táp A táp szolgál a globális változótérként, és áramforrásként.">
<polygon fill="#ffffff" stroke="#000000" points="4444.2425,-1560.5 4444.2425,-1644.5 4638.8965,-1644.5 4638.8965,-1560.5 4444.2425,-1560.5"/>
<text text-anchor="middle" x="4541.5695" y="-1631.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Pole</text>
<polyline fill="none" stroke="#000000" points="4444.2425,-1624.5 4638.8965,-1624.5 "/>
<text text-anchor="middle" x="4541.5695" y="-1611.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="4444.2425,-1604.5 4638.8965,-1604.5 "/>
<text text-anchor="start" x="4452.2425" y="-1591.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Pole(std::string pName, int reach)</text>
<text text-anchor="start" x="4452.2425" y="-1579.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::string getConnectionString() const</text>
<text text-anchor="start" x="4452.2425" y="-1567.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::string toBlueprint() const</text>
</a>
</g>
</g>
<!-- Entity&#45;&gt;Pole -->
<g id="edge43" class="edge">
<title>Entity-&gt;Pole</title>
<path fill="none" stroke="#191970" d="M4407.7557,-2038.6338C4453.1803,-1890.5835 4505.0764,-1721.4404 4528.6758,-1644.5239"/>
<polygon fill="none" stroke="#191970" points="4404.3607,-2037.7671 4404.7734,-2048.3539 4411.0528,-2039.8204 4404.3607,-2037.7671"/>
</g>
<!-- Position -->
<g id="node35" class="node">
<title>Position</title>
<g id="a_node35"><a xlink:href="$class_position.html" xlink:title="Pozíció">
<polygon fill="#ffffff" stroke="#000000" points="4220.179,-2655.5 4220.179,-2823.5 4430.96,-2823.5 4430.96,-2655.5 4220.179,-2655.5"/>
<text text-anchor="middle" x="4325.5695" y="-2810.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Position</text>
<polyline fill="none" stroke="#000000" points="4220.179,-2803.5 4430.96,-2803.5 "/>
<text text-anchor="start" x="4228.179" y="-2790.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ float x</text>
<text text-anchor="start" x="4228.179" y="-2778.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ float y</text>
<polyline fill="none" stroke="#000000" points="4220.179,-2771.5 4430.96,-2771.5 "/>
<text text-anchor="start" x="4228.179" y="-2758.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Position(float x, float y)</text>
<text text-anchor="start" x="4228.179" y="-2746.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Position operator+(const Position</text>
<text text-anchor="start" x="4228.179" y="-2734.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;delta) const</text>
<text text-anchor="start" x="4228.179" y="-2722.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool operator&lt;(const Position &amp;p2) const</text>
<text text-anchor="start" x="4228.179" y="-2710.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Position &amp; operator+=(const Position &amp;p2)</text>
<text text-anchor="start" x="4228.179" y="-2698.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Position operator/(float f) const</text>
<text text-anchor="start" x="4228.179" y="-2686.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool inBounds(int width, int height=-1)</text>
<text text-anchor="start" x="4228.179" y="-2674.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ float distanceTo(const Position</text>
<text text-anchor="start" x="4228.179" y="-2662.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;p2) const</text>
</a>
</g>
</g>
<!-- Position&#45;&gt;Entity -->
<g id="edge39" class="edge">
<title>Position-&gt;Entity</title>
<path fill="none" stroke="#404040" d="M4325.5695,-2655.4998C4325.5695,-2631.9362 4325.5695,-2604.97 4325.5695,-2576.6999"/>
<polygon fill="none" stroke="#404040" points="4325.5696,-2576.5104 4321.5695,-2570.5105 4325.5695,-2564.5104 4329.5695,-2570.5104 4325.5696,-2576.5104"/>
<text text-anchor="middle" x="4337.7975" y="-2586" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> #pos</text>
</g>
<!-- Lexer -->
<g id="node38" class="node">
<title>Lexer</title>
<g id="a_node38"><a xlink:href="$class_lexer.html" xlink:title="Lexikai értelmező">
<polygon fill="#ffffff" stroke="#000000" points="4644.2285,-2186.5 4644.2285,-2426.5 4878.9105,-2426.5 4878.9105,-2186.5 4644.2285,-2186.5"/>
<text text-anchor="middle" x="4761.5695" y="-2413.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Lexer</text>
<polyline fill="none" stroke="#000000" points="4644.2285,-2406.5 4878.9105,-2406.5 "/>
<text text-anchor="start" x="4652.2285" y="-2393.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::istream &amp; is</text>
<text text-anchor="start" x="4652.2285" y="-2381.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::vector&lt; Token &gt; tokens</text>
<text text-anchor="start" x="4652.2285" y="-2369.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::vector&lt; Token &gt;::iterator currentToken</text>
<text text-anchor="start" x="4652.2285" y="-2357.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::vector&lt; Token &gt;::iterator nextToken</text>
<polyline fill="none" stroke="#000000" points="4644.2285,-2350.5 4878.9105,-2350.5 "/>
<text text-anchor="start" x="4652.2285" y="-2337.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Lexer(std::istream &amp;_is)</text>
<text text-anchor="start" x="4652.2285" y="-2325.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Lexer(std::ifstream &amp;_is)</text>
<text text-anchor="start" x="4652.2285" y="-2313.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const std::vector&lt; Token &gt; &amp; getTokens() const</text>
<text text-anchor="start" x="4652.2285" y="-2301.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void operator()()</text>
<text text-anchor="start" x="4652.2285" y="-2289.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Token &amp; next() const</text>
<text text-anchor="start" x="4652.2285" y="-2277.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void except(Token t)</text>
<text text-anchor="start" x="4652.2285" y="-2265.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void consume()</text>
<text text-anchor="start" x="4652.2285" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Token &amp; current() const</text>
<text text-anchor="start" x="4652.2285" y="-2241.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool eof() const</text>
<text text-anchor="start" x="4652.2285" y="-2229.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- bool isSingleCharToken(char c) const</text>
<text text-anchor="start" x="4652.2285" y="-2217.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- bool isTwoCharToken(std::string</text>
<text text-anchor="start" x="4652.2285" y="-2205.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">::iterator &amp;it) const</text>
<text text-anchor="start" x="4652.2285" y="-2193.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- void lexLine(std::string line)</text>
</a>
</g>
</g>
<!-- Compiler -->
<g id="node39" class="node">
<title>Compiler</title>
<g id="a_node39"><a xlink:title="Egy fordítási folyamat reprezentálása.">
<polygon fill="#ffffff" stroke="#000000" points="4656.4705,-1446.5 4656.4705,-1758.5 4866.6685,-1758.5 4866.6685,-1446.5 4656.4705,-1446.5"/>
<text text-anchor="middle" x="4761.5695" y="-1745.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Compiler</text>
<polyline fill="none" stroke="#000000" points="4656.4705,-1738.5 4866.6685,-1738.5 "/>
<text text-anchor="start" x="4664.4705" y="-1725.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::istream * is</text>
<text text-anchor="start" x="4664.4705" y="-1713.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::ostream * os</text>
<text text-anchor="start" x="4664.4705" y="-1701.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::ifstream * ifs</text>
<text text-anchor="start" x="4664.4705" y="-1689.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::ofstream * ofs</text>
<text text-anchor="start" x="4664.4705" y="-1677.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::map&lt; const Identifier, Module</text>
<text text-anchor="start" x="4664.4705" y="-1665.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> * &gt; definedModules</text>
<text text-anchor="start" x="4664.4705" y="-1653.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::map&lt; const Identifier, CompilationUnit</text>
<text text-anchor="start" x="4664.4705" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> * &gt; compilationUnits</text>
<polyline fill="none" stroke="#000000" points="4656.4705,-1634.5 4866.6685,-1634.5 "/>
<text text-anchor="start" x="4664.4705" y="-1621.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Compiler(std::istream &amp;_is, std</text>
<text text-anchor="start" x="4664.4705" y="-1609.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">::ostream &amp;_os)</text>
<text text-anchor="start" x="4664.4705" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Compiler(const char *filename,</text>
<text text-anchor="start" x="4664.4705" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> std::ostream &amp;_os)</text>
<text text-anchor="start" x="4664.4705" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Compiler(const char *inFilename,</text>
<text text-anchor="start" x="4664.4705" y="-1561.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> const char *outFilename)</text>
<text text-anchor="start" x="4664.4705" y="-1549.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~Compiler()</text>
<text text-anchor="start" x="4664.4705" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Compiler &amp; operator=(const Compiler &amp;c)</text>
<text text-anchor="start" x="4664.4705" y="-1525.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void compile()</text>
<text text-anchor="start" x="4664.4705" y="-1513.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- void lex()</text>
<text text-anchor="start" x="4664.4705" y="-1501.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- void parse()</text>
<text text-anchor="start" x="4664.4705" y="-1489.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- void check()</text>
<text text-anchor="start" x="4664.4705" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- void optimize()</text>
<text text-anchor="start" x="4664.4705" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::string compileBlueprint()</text>
<text text-anchor="start" x="4664.4705" y="-1453.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- void encode()</text>
</a>
</g>
</g>
<!-- Lexer&#45;&gt;Compiler -->
<g id="edge44" class="edge">
<title>Lexer-&gt;Compiler</title>
<path fill="none" stroke="#404040" d="M4761.5695,-2186.278C4761.5695,-2071.9546 4761.5695,-1898.9126 4761.5695,-1770.8816"/>
<polygon fill="none" stroke="#404040" points="4761.5696,-1770.6355 4757.5695,-1764.6355 4761.5695,-1758.6355 4765.5695,-1764.6354 4761.5696,-1770.6355"/>
<text text-anchor="middle" x="4775.4565" y="-1918.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> -lexer</text>
</g>
<!-- AutoDtor -->
<g id="node40" class="node">
<title>AutoDtor</title>
<g id="a_node40"><a xlink:title="Automatikusan törli a megadott dinamikus memóriát ha nem hívódik meg előbb az AutoDtor::success()">
<polygon fill="#ffffff" stroke="#000000" points="4883.3085,-2691.5 4883.3085,-2787.5 4981.8305,-2787.5 4981.8305,-2691.5 4883.3085,-2691.5"/>
<text text-anchor="middle" x="4932.5695" y="-2774.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">AutoDtor&lt; T &gt;</text>
<polyline fill="none" stroke="#000000" points="4883.3085,-2767.5 4981.8305,-2767.5 "/>
<text text-anchor="start" x="4891.3085" y="-2754.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- T * toDelete</text>
<polyline fill="none" stroke="#000000" points="4883.3085,-2747.5 4981.8305,-2747.5 "/>
<text text-anchor="start" x="4891.3085" y="-2734.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ AutoDtor(T *t)</text>
<text text-anchor="start" x="4891.3085" y="-2722.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ ~AutoDtor()</text>
<text text-anchor="start" x="4891.3085" y="-2710.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void success()</text>
<text text-anchor="start" x="4891.3085" y="-2698.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void update(T *t)</text>
</a>
</g>
</g>
<!-- LinkingUnit -->
<g id="node41" class="node">
<title>LinkingUnit</title>
<g id="a_node41"><a xlink:title="Linkelési (színezési) egység.">
<polygon fill="#ffffff" stroke="#000000" points="4999.477,-2649.5 4999.477,-2829.5 5229.662,-2829.5 5229.662,-2649.5 4999.477,-2649.5"/>
<text text-anchor="middle" x="5114.5695" y="-2816.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">LinkingUnit</text>
<polyline fill="none" stroke="#000000" points="4999.477,-2809.5 5229.662,-2809.5 "/>
<text text-anchor="start" x="5007.477" y="-2796.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::map&lt; const Identifier, unsigned</text>
<text text-anchor="start" x="5007.477" y="-2784.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> int &gt; variableColors</text>
<polyline fill="none" stroke="#000000" points="4999.477,-2777.5 5229.662,-2777.5 "/>
<text text-anchor="start" x="5007.477" y="-2764.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ LinkingUnit(RandomIt firstID, RandomIt lastID)</text>
<text text-anchor="start" x="5007.477" y="-2752.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ LinkingUnit(IDIt firstID, IDIt</text>
<text text-anchor="start" x="5007.477" y="-2740.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> lastID, ColorIt firstColor, ColorIt</text>
<text text-anchor="start" x="5007.477" y="-2728.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> lastColor)</text>
<text text-anchor="start" x="5007.477" y="-2716.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ unsigned int getVariableColor(const</text>
<text text-anchor="start" x="5007.477" y="-2704.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> Identifier &amp;id) const</text>
<text text-anchor="start" x="5007.477" y="-2692.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool variableHasColor(const Identifier</text>
<text text-anchor="start" x="5007.477" y="-2680.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> &amp;id) const</text>
<text text-anchor="start" x="5007.477" y="-2668.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void printVariableColorAssociation</text>
<text text-anchor="start" x="5007.477" y="-2656.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">(std::ostream &amp;os) const</text>
</a>
</g>
</g>
<!-- CompilationUnit -->
<g id="node42" class="node">
<title>CompilationUnit</title>
<g id="a_node42"><a xlink:title="Egy fordítási egység.">
<polygon fill="#ffffff" stroke="#000000" points="5247.226,-2613.5 5247.226,-2865.5 5521.913,-2865.5 5521.913,-2613.5 5247.226,-2613.5"/>
<text text-anchor="middle" x="5384.5695" y="-2852.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">CompilationUnit</text>
<polyline fill="none" stroke="#000000" points="5247.226,-2845.5 5521.913,-2845.5 "/>
<text text-anchor="start" x="5255.226" y="-2832.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::set&lt; Identifier &gt; definedVariables</text>
<text text-anchor="start" x="5255.226" y="-2820.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::set&lt; Identifier &gt; assignedVariables</text>
<text text-anchor="start" x="5255.226" y="-2808.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- const std::map&lt; const Identifier,</text>
<text text-anchor="start" x="5255.226" y="-2796.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> Module * &gt; definedModules</text>
<polyline fill="none" stroke="#000000" points="5247.226,-2789.5 5521.913,-2789.5 "/>
<text text-anchor="start" x="5255.226" y="-2776.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ CompilationUnit(const std::map</text>
<text text-anchor="start" x="5255.226" y="-2764.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">&lt; const Identifier, Module * &gt; modules)</text>
<text text-anchor="start" x="5255.226" y="-2752.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool isVariableDefined(const Identifier</text>
<text text-anchor="start" x="5255.226" y="-2740.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> *id) const</text>
<text text-anchor="start" x="5255.226" y="-2728.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void defineVariable(const Identifier *id)</text>
<text text-anchor="start" x="5255.226" y="-2716.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool isVariableAssigned(const Identifier</text>
<text text-anchor="start" x="5255.226" y="-2704.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> *id) const</text>
<text text-anchor="start" x="5255.226" y="-2692.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ void assignVariable(const Identifier *id)</text>
<text text-anchor="start" x="5255.226" y="-2680.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool isModuleDefined(const Identifier</text>
<text text-anchor="start" x="5255.226" y="-2668.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> *module) const</text>
<text text-anchor="start" x="5255.226" y="-2656.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const ParameterListDeclaration *</text>
<text text-anchor="start" x="5255.226" y="-2644.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> getModuleParameters(const Identifier</text>
<text text-anchor="start" x="5255.226" y="-2632.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> *module) const</text>
<text text-anchor="start" x="5255.226" y="-2620.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const std::set&lt; Identifier &gt; &amp; getDefinedVariables() const</text>
</a>
</g>
</g>
<!-- Signal -->
<g id="node43" class="node">
<title>Signal</title>
<g id="a_node43"><a xlink:title="Signal specializálásra 1 hosszra kényelem érdekében.">
<polygon fill="#ffffff" stroke="#000000" points="5539.63,-2679.5 5539.63,-2799.5 5711.509,-2799.5 5711.509,-2679.5 5539.63,-2679.5"/>
<text text-anchor="middle" x="5625.5695" y="-2786.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Signal&lt; 1 &gt;</text>
<polyline fill="none" stroke="#000000" points="5539.63,-2779.5 5711.509,-2779.5 "/>
<text text-anchor="start" x="5547.63" y="-2766.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ unsigned int sig</text>
<text text-anchor="start" x="5547.63" y="-2754.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool isConst</text>
<text text-anchor="start" x="5547.63" y="-2742.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool out</text>
<polyline fill="none" stroke="#000000" points="5539.63,-2735.5 5711.509,-2735.5 "/>
<text text-anchor="start" x="5547.63" y="-2722.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Signal(const unsigned int sig,</text>
<text text-anchor="start" x="5547.63" y="-2710.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> const bool isConst, bool out=false)</text>
<text text-anchor="start" x="5547.63" y="-2698.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ unsigned int getSig(int idx) const</text>
<text text-anchor="start" x="5547.63" y="-2686.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool getConst(int idx) const</text>
</a>
</g>
</g>
<!-- Translator -->
<g id="node44" class="node">
<title>Translator</title>
<g id="a_node44"><a xlink:title="Identifier fordító">
<polygon fill="#ffffff" stroke="#000000" points="5729.053,-2685.5 5729.053,-2793.5 5920.086,-2793.5 5920.086,-2685.5 5729.053,-2685.5"/>
<text text-anchor="middle" x="5824.5695" y="-2780.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Translator</text>
<polyline fill="none" stroke="#000000" points="5729.053,-2773.5 5920.086,-2773.5 "/>
<text text-anchor="start" x="5737.053" y="-2760.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::map&lt; Identifier, Identifier &gt; trans</text>
<text text-anchor="start" x="5737.053" y="-2748.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- unsigned int translationID</text>
<text text-anchor="start" x="5737.053" y="-2736.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- static unsigned int globalTranslationID</text>
<polyline fill="none" stroke="#000000" points="5729.053,-2729.5 5920.086,-2729.5 "/>
<text text-anchor="start" x="5737.053" y="-2716.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Translator(const std::map&lt; Identifier,</text>
<text text-anchor="start" x="5737.053" y="-2704.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> Identifier &gt; &amp;tr)</text>
<text text-anchor="start" x="5737.053" y="-2692.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Identifier at(const Identifier &amp;id) const</text>
</a>
</g>
</g>
<!-- Token -->
<g id="node45" class="node">
<title>Token</title>
<g id="a_node45"><a xlink:title="Egy lexikai token.">
<polygon fill="#ffffff" stroke="#000000" points="4657.5685,-2619.5 4657.5685,-2859.5 4865.5705,-2859.5 4865.5705,-2619.5 4657.5685,-2619.5"/>
<text text-anchor="middle" x="4761.5695" y="-2846.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">Token</text>
<polyline fill="none" stroke="#000000" points="4657.5685,-2839.5 4865.5705,-2839.5 "/>
<text text-anchor="start" x="4665.5685" y="-2826.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">- std::string content</text>
<polyline fill="none" stroke="#000000" points="4657.5685,-2819.5 4865.5705,-2819.5 "/>
<text text-anchor="start" x="4665.5685" y="-2806.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Token(std::string s)</text>
<text text-anchor="start" x="4665.5685" y="-2794.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Token(const char *s)</text>
<text text-anchor="start" x="4665.5685" y="-2782.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ Token(char c)</text>
<text text-anchor="start" x="4665.5685" y="-2770.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ size_t length() const</text>
<text text-anchor="start" x="4665.5685" y="-2758.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ char &amp; operator[](int i)</text>
<text text-anchor="start" x="4665.5685" y="-2746.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const char &amp; operator[](int i) const</text>
<text text-anchor="start" x="4665.5685" y="-2734.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool operator==(const Token &amp;t) const</text>
<text text-anchor="start" x="4665.5685" y="-2722.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool operator==(const std::string &amp;) const</text>
<text text-anchor="start" x="4665.5685" y="-2710.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool operator==(const char *s) const</text>
<text text-anchor="start" x="4665.5685" y="-2698.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool operator==(const char c) const</text>
<text text-anchor="start" x="4665.5685" y="-2686.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool operator!=(const Token &amp;t) const</text>
<text text-anchor="start" x="4665.5685" y="-2674.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool operator!=(const char *s) const</text>
<text text-anchor="start" x="4665.5685" y="-2662.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ operator std::string()</text>
<text text-anchor="start" x="4665.5685" y="-2650.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ std::string &amp; getContent()</text>
<text text-anchor="start" x="4665.5685" y="-2638.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ const std::string &amp; getContent() const</text>
<text text-anchor="start" x="4665.5685" y="-2626.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ bool isEOF() const</text>
</a>
</g>
</g>
<!-- Token&#45;&gt;Lexer -->
<g id="edge49" class="edge">
<title>Token-&gt;Lexer</title>
<path fill="none" stroke="#404040" d="M4761.5695,-2619.4604C4761.5695,-2563.3817 4761.5695,-2496.4495 4761.5695,-2438.9032"/>
<polygon fill="none" stroke="#404040" points="4761.5696,-2438.7731 4757.5695,-2432.7732 4761.5695,-2426.7731 4765.5695,-2432.7731 4761.5696,-2438.7731"/>
<text text-anchor="middle" x="4779.3515" y="-2586" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> -tokens</text>
</g>
</g>
</svg>